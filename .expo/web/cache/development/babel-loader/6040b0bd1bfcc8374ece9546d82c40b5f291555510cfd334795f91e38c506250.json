{"ast":null,"code":"var _jsxFileName = \"/home/luigi/\\xC1rea de Trabalho/glpi-app-react/src/pages/Components/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport logo from '../assets/logo.png';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport RenderHtml from 'react-native-render-html';\nimport servers from \"./servers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  const navigation = useNavigation();\n  const [chatData, setChatData] = useState([]);\n  const [chatMessageData, setMessageData] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [headerText, setHeaderText] = useState(\"Chat\");\n  const [chatVisible, setChatVisible] = useState(true);\n  const [userVisible, setUserVisible] = useState(true);\n  const [, setServerUrl] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await chatScream();\n      setChatData(data);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchServerUrl = async () => {\n      const url = await servers();\n      console.log(\"Server URL:\", url);\n      setServerUrl(url);\n    };\n    fetchServerUrl();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await chatMessageScream();\n      setMessageData(data);\n      setChatVisible(data && data.length > 0);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const updateHeaderText = async () => {\n      const text = await textHeaderRoutes();\n      setHeaderText(text);\n    };\n    updateHeaderText();\n  }, []);\n  const tokenApi = async () => {\n    const storedSessionToken = await AsyncStorage.getItem('sessionToken');\n    const [, tokenPart] = storedSessionToken.replace(/[{}]/g, '').split(':');\n    const tokenObject = JSON.parse(tokenPart);\n    return tokenObject;\n  };\n  const saveId = async () => {\n    const storedId = await AsyncStorage.getItem('selectedTicketId');\n    return storedId;\n  };\n  const autoPages = async () => {\n    try {\n      const routes = await AsyncStorage.getItem('option');\n      if (routes !== null) {\n        return JSON.parse(routes);\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error('Erro ao recuperar a opção:', error);\n      return null;\n    }\n  };\n  const chatScream = async () => {\n    try {\n      const storedId = await saveId();\n      const TokenObject = await tokenApi();\n      const routes = await autoPages();\n      const url = await servers();\n      const res = await fetch(`${url}/${routes}/${storedId}`, {\n        method: \"GET\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': TokenObject\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        return [data];\n      } else {\n        console.error(\"Erro em acessar a API 1\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Erro em carregar a API:\", error);\n      return [];\n    }\n  };\n  const chatMessageScream = async () => {\n    try {\n      const storedId = await saveId();\n      const tokenObject = await tokenApi();\n      const routes = await autoPages();\n      const url = await servers();\n      const res = await fetch(`${url}/${routes}/${storedId}/ITILFollowup/`, {\n        method: \"GET\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        return data;\n      } else {\n        console.error(\"Erro em acessar a API 2\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Erro em carregar a API:\", error);\n      return [];\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      const storedId = await saveId();\n      const tokenObject = await tokenApi();\n      const routes = await autoPages();\n      const url = await servers();\n      const formattedMessage = `${newMessage}`;\n      const response = await fetch(`${url}/ITILFollowup/`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject\n        },\n        body: JSON.stringify({\n          input: {\n            itemtype: routes,\n            items_id: storedId,\n            users_id: 9,\n            content: formattedMessage\n          }\n        })\n      });\n      if (!newMessage.trim()) {\n        console.error(\"Mensagem está vazia\");\n        return;\n      }\n      if (response.ok) {\n        console.log(\"Mensagem enviada com sucesso\");\n        setNewMessage(\"\");\n        const data = await chatMessageScream();\n        setMessageData(data);\n      } else {\n        const errorData = await response.json();\n        console.error(\"Erro ao enviar a mensagem:\", errorData);\n      }\n    } catch (error) {\n      console.error(\"Erro ao enviar a mensagem:\", error);\n    }\n  };\n  const textHeaderRoutes = async () => {\n    const routes = await autoPages();\n    switch (routes) {\n      case 'Ticket':\n        return 'Tickets';\n      case 'Computer':\n        return 'Computadores';\n      case 'Printer':\n        return 'Impressoras';\n      default:\n        return 'erro';\n    }\n  };\n  const renderChatHeader = () => {\n    if (chatData.length > 0) {\n      const item = chatData[0];\n      return _jsxDEV(View, {\n        delay: 400,\n        animation: \"fadeInUp\",\n        style: styles.chatItem,\n        children: [_jsxDEV(Text, {\n          style: styles.headerTextChat,\n          children: [\"Chat com \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: [\"(\", item.id, \") - \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  const renderMessageItem = ({\n    item\n  }) => {\n    const isSentByCurrentUser = item.users_id === 9;\n    return _jsxDEV(View, {\n      delay: 400,\n      animation: \"fadeInUp\",\n      style: [styles.chatbox, isSentByCurrentUser ? styles.sentMessage : styles.receivedMessage],\n      children: _jsxDEV(RenderHtml, {\n        contentWidth: Dimensions.get('window').width - 40,\n        source: {\n          html: item.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this);\n  };\n  return _jsxDEV(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    children: _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(View, {\n        style: styles.imageContainer,\n        children: _jsxDEV(Animatable.Image, {\n          animation: \"flipInY\",\n          source: require('./path-to-your-image.png'),\n          style: styles.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), _jsxDEV(Animatable.View, {\n        delay: 400,\n        animation: \"fadeInUp\",\n        style: styles.header,\n        children: [_jsxDEV(Pressable, {\n          onPress: () => navigation.navigate('Serviços'),\n          children: _jsxDEV(Text, {\n            style: styles.textHeader,\n            children: \"Servi\\xE7os\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          style: styles.textHeader,\n          children: \" /\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          style: styles.textHeader,\n          children: textServices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), _jsxDEV(FlatList, {\n        ListHeaderComponent: renderChatHeader,\n        data: chatMessageData,\n        keyExtractor: item => item.id.toString(),\n        renderItem: renderMessageItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), _jsxDEV(View, {\n        style: styles.inputContainer,\n        children: [_jsxDEV(TextInput, {\n          style: styles.input,\n          placeholder: \"Digite sua mensagem...\",\n          value: newMessage,\n          onChangeText: setNewMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), _jsxDEV(Pressable, {\n          onPress: sendMessage,\n          style: styles.sendButton,\n          children: _jsxDEV(Text, {\n            style: styles.text,\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: 'space-between'\n  },\n  imageContainer: {\n    alignItems: 'center',\n    marginVertical: 10\n  },\n  image: {\n    width: 100,\n    height: 100\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 10,\n    backgroundColor: '#498DF3'\n  },\n  textHeader: {\n    fontSize: 20,\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  listContainer: {\n    flex: 1\n  },\n  headerTextChat: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  chatItem: {\n    backgroundColor: \"#DBE6FD\",\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    marginBottom: 10\n  },\n  sentMessage: {\n    marginLeft: 'auto',\n    backgroundColor: '#ADD8E6'\n  },\n  receivedMessage: {\n    marginRight: 'auto',\n    backgroundColor: '#DBE6FD'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#fff',\n    borderTopWidth: 1,\n    borderTopColor: '#ddd',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  input: {\n    backgroundColor: \"#ADD8E6\",\n    borderRadius: 8,\n    marginBottom: 10,\n    padding: 10,\n    flex: 1\n  },\n  sendButton: {\n    backgroundColor: \"#498DF3\",\n    borderRadius: 6,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginLeft: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: \"#fff\",\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: \"#498DF3\",\n    borderRadius: 6,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: '50%'\n  }\n});\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","Text","StyleSheet","Pressable","View","TextInput","FlatList","ScrollView","KeyboardAvoidingView","Platform","Dimensions","logo","Animatable","useNavigation","AsyncStorage","RenderHtml","servers","jsxDEV","_jsxDEV","Chat","navigation","chatData","setChatData","chatMessageData","setMessageData","newMessage","setNewMessage","headerText","setHeaderText","chatVisible","setChatVisible","userVisible","setUserVisible","setServerUrl","fetchData","data","chatScream","fetchServerUrl","url","console","log","chatMessageScream","length","updateHeaderText","text","textHeaderRoutes","tokenApi","storedSessionToken","getItem","tokenPart","replace","split","tokenObject","JSON","parse","saveId","storedId","autoPages","routes","error","TokenObject","res","fetch","method","headers","ok","json","sendMessage","formattedMessage","response","body","stringify","input","itemtype","items_id","users_id","content","trim","errorData","renderChatHeader","item","delay","animation","style","styles","chatItem","children","headerTextChat","name","fileName","_jsxFileName","lineNumber","columnNumber","id","renderMessageItem","isSentByCurrentUser","chatbox","sentMessage","receivedMessage","contentWidth","get","width","source","html","behavior","OS","container","imageContainer","Image","require","image","header","onPress","navigate","textHeader","textServices","ListHeaderComponent","keyExtractor","toString","renderItem","inputContainer","placeholder","value","onChangeText","sendButton","create","flex","backgroundColor","justifyContent","alignItems","marginVertical","height","flexDirection","paddingVertical","fontSize","color","fontWeight","listContainer","marginBottom","textAlign","borderRadius","paddingHorizontal","marginLeft","marginRight","padding","borderTopWidth","borderTopColor","button"],"sources":["/home/luigi/Área de Trabalho/glpi-app-react/src/pages/Components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, StyleSheet, Pressable, View, TextInput, FlatList, ScrollView, KeyboardAvoidingView, Platform, Dimensions } from \"react-native\";\nimport logo from '../assets/logo.png';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport RenderHtml from 'react-native-render-html';\nimport servers from \"./servers\";\n\nconst Chat = () => {\n    const navigation = useNavigation();\n    const [chatData, setChatData] = useState([]);\n    const [chatMessageData, setMessageData] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n    const [headerText, setHeaderText] = useState(\"Chat\");\n    const [chatVisible, setChatVisible] = useState(true);\n    const [userVisible, setUserVisible] = useState(true);\n    const [, setServerUrl] = useState('');\n\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            const data = await chatScream();\n            setChatData(data);\n        };fetchData();\n    }, []);\n\n    useEffect(() => {\n        const fetchServerUrl = async () => {\n            const url = await servers();\n            console.log(\"Server URL:\", url);\n            setServerUrl(url);\n        };\n        fetchServerUrl();\n    }, []);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const data = await chatMessageScream();\n            setMessageData(data);\n            setChatVisible(data && data.length > 0);\n        };fetchData();\n    }, []);\n\n    useEffect(() => {\n        const updateHeaderText = async () => {\n            const text = await textHeaderRoutes();\n            setHeaderText(text);\n        };updateHeaderText();\n    }, []);\n\n    const tokenApi = async () => { //var do token \n        const storedSessionToken = await AsyncStorage.getItem('sessionToken');\n        const [, tokenPart] = storedSessionToken.replace(/[{}]/g, '').split(':');\n        const tokenObject = JSON.parse(tokenPart);return tokenObject;\n    };\n\n    const saveId = async () => { //pega o ID do item clicado e joga pra API\n        const storedId = await AsyncStorage.getItem('selectedTicketId');return storedId;\n    };\n\n    const autoPages = async () => { //pega o serviço que o user selecionou e joga pra API\n        try {\n            const routes = await AsyncStorage.getItem('option');\n            if (routes !== null) {\n                return JSON.parse(routes);\n            } else { return null;\n            }\n        } catch (error) {\n            console.error('Erro ao recuperar a opção:', error);return null;\n        }\n    };\n\n    const chatScream = async () => {\n        try {\n            const storedId = await saveId();\n            const TokenObject = await tokenApi();\n            const routes = await autoPages();\n            const url = await servers();\n\n            const res = await fetch(`${url}/${routes}/${storedId}`, {\n                method: \"GET\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': TokenObject,\n                },\n            });\n\n            if (res.ok) {\n                const data = await res.json(); return [data];\n            } else {\n                console.error(\"Erro em acessar a API 1\"); return [];\n            }\n        } catch (error) {\n            console.error(\"Erro em carregar a API:\", error); return [];\n        }\n    };\n\n    const chatMessageScream = async () => {\n        try {\n            const storedId = await saveId();\n            const tokenObject = await tokenApi();\n            const routes = await autoPages();\n            const url = await servers();\n\n            const res = await fetch(`${url}/${routes}/${storedId}/ITILFollowup/`, {\n                method: \"GET\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                },\n            });\n\n            if (res.ok) {\n                const data = await res.json();\n                return data;\n            } else {\n                console.error(\"Erro em acessar a API 2\");\n                return [];\n            }\n        } catch (error) {\n            console.error(\"Erro em carregar a API:\", error);\n            return [];\n        }\n    };\n\n    const sendMessage = async () => {\n        try {\n            const storedId = await saveId();\n            const tokenObject = await tokenApi();\n            const routes = await autoPages();\n            const url = await servers();\n            \n            const formattedMessage = `${newMessage}`;\n            const response = await fetch(`${url}/ITILFollowup/`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                },\n                body: JSON.stringify({\n                    input: {\n                        itemtype: routes, //manda pra rota do chamado - Ticket - Computer - Printer \n                        items_id: storedId, //abre o id do chamado\n                        users_id: 9, //usar uma var para o mudar o user \n                        content: formattedMessage //mensagem do user\n                    }\n                }),\n            });\n            if (!newMessage.trim()) {\n                console.error(\"Mensagem está vazia\");\n                \n                return;\n            }\n            if (response.ok) {\n                console.log(\"Mensagem enviada com sucesso\");\n                setNewMessage(\"\");\n                const data = await chatMessageScream();\n                setMessageData(data);\n            } else {\n                const errorData = await response.json();\n                console.error(\"Erro ao enviar a mensagem:\", errorData);\n            }\n        } catch (error) {\n            console.error(\"Erro ao enviar a mensagem:\", error);\n        }\n    };\n\n    const textHeaderRoutes = async () => {\n        const routes = await autoPages();\n        switch (routes) {\n            case 'Ticket': return 'Tickets';\n            case 'Computer': return 'Computadores';\n            case 'Printer': return 'Impressoras';\n            default: return 'erro';\n        }\n    };\n\n    const renderChatHeader = () => {\n        if (chatData.length > 0) {\n            const item = chatData[0];\n            return (\n                <View \n                    delay={400} animation={\"fadeInUp\"} style={styles.chatItem}>\n                    <Text style={styles.headerTextChat}>Chat com {item.name}</Text>\n                    <Text>({item.id}) - {item.name}</Text>\n                    <Text>{item.content}</Text>\n                </View>\n            );\n        }\n        return null;\n    };\n\n    const renderMessageItem = ({ item }) => {\n        const isSentByCurrentUser = item.users_id === 9; // trocar pelo Var ID User\n\n        return (\n            <View \n            delay={400} animation={\"fadeInUp\"} \n            style={[styles.chatbox, isSentByCurrentUser ? styles.sentMessage : styles.receivedMessage]}>\n                \n                <RenderHtml contentWidth={Dimensions.get('window').width - 40} source={{ html: item.content }} />\n            </View >\n        );\n    };\n    return (\n        <KeyboardAvoidingView\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n            style={styles.container}\n        >\n            <View style={styles.container}>\n                <View style={styles.imageContainer}>\n                    <Animatable.Image\n                        animation={\"flipInY\"}\n                        source={require('./path-to-your-image.png')} // Altere para o caminho da sua imagem\n                        style={styles.image}\n                    />\n                </View>\n\n                <Animatable.View delay={400} animation={\"fadeInUp\"} style={styles.header}>\n                    <Pressable onPress={() => navigation.navigate('Serviços')}>\n                        <Text style={styles.textHeader}>Serviços</Text>\n                    </Pressable>\n                    <Text style={styles.textHeader}> /</Text>\n                    <Text style={styles.textHeader}>{textServices}</Text>\n                </Animatable.View>\n\n                <FlatList\n                    ListHeaderComponent={renderChatHeader}\n                    data={chatMessageData}\n                    keyExtractor={(item) => item.id.toString()}\n                    renderItem={renderMessageItem}\n                />\n                <View style={styles.inputContainer}>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Digite sua mensagem...\"\n                        value={newMessage}\n                        onChangeText={setNewMessage}\n                    />\n                    <Pressable onPress={sendMessage} style={styles.sendButton}>\n                        <Text style={styles.text}>Enviar</Text>\n                    </Pressable>\n                </View>\n            </View>\n        </KeyboardAvoidingView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"#fff\",\n        justifyContent: 'space-between',\n    },\n    imageContainer: {\n        alignItems: 'center',\n        marginVertical: 10,\n    },\n    image: {\n        width: 100, // Ajuste o tamanho conforme necessário\n        height: 100,\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingVertical: 10,\n        backgroundColor: '#498DF3',\n    },\n    textHeader: {\n        fontSize: 20,\n        color: '#fff',\n        fontWeight: 'bold',\n    },\n    listContainer: {\n        flex: 1,\n    },\n    headerTextChat: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        textAlign: 'center',\n    },\n    chatItem: {\n        backgroundColor: \"#DBE6FD\",\n        borderRadius: 8,\n        paddingHorizontal: 15,\n        paddingVertical: 10,\n        marginBottom: 10,\n    },\n    sentMessage: {\n        marginLeft: 'auto',\n        backgroundColor: '#ADD8E6',\n    },\n    receivedMessage: {\n        marginRight: 'auto',\n        backgroundColor: '#DBE6FD',\n    },\n    inputContainer: {\n        flexDirection: 'row',\n        padding: 10,\n        backgroundColor: '#fff',\n        borderTopWidth: 1,\n        borderTopColor: '#ddd',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    input: {\n        backgroundColor: \"#ADD8E6\",\n        borderRadius: 8,\n        marginBottom: 10,\n        padding: 10,\n        flex: 1,\n    },\n    sendButton: {\n        backgroundColor: \"#498DF3\",\n        borderRadius: 6,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        marginLeft: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    text: {\n        color: \"#fff\",\n        fontSize: 16,\n    },\n    button: {\n        backgroundColor: \"#498DF3\",\n        borderRadius: 6,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: '50%',\n    },\n});\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}