{"ast":null,"code":"var _jsxFileName = \"/home/luigi/\\xC1rea de Trabalho/glpi-app-react/src/pages/Components/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport logo from '../assets/logo.png';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  const navigation = useNavigation();\n  const [chatData, setChatData] = useState([]);\n  const [chatMensagemData, setChatMensagemData] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [headerText, setHeaderText] = useState(\"Chat\");\n  const [chatVisible, setChatVisible] = useState(true);\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await ChatScreen();\n      setChatData(data);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await chatMensagemScreen();\n      setChatMensagemData(data);\n      setChatVisible(data && data.length > 0);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const updateHeaderText = async () => {\n      const text = await textHeaderRoutes();\n      setHeaderText(text);\n    };\n    updateHeaderText();\n  }, []);\n  useEffect(() => {\n    const fetchFullSession = async () => {\n      const sessionData = await getFullSession();\n      if (sessionData) {\n        console.log(\"Dados da sessão:\", sessionData);\n      }\n    };\n    fetchFullSession();\n  }, []);\n  const TokenAPI = async () => {\n    const storedSessionToken = await AsyncStorage.getItem('sessionToken');\n    const [, tokenPart] = storedSessionToken.replace(/[{}]/g, '').split(':');\n    const tokenObject = JSON.parse(tokenPart);\n    return tokenObject;\n  };\n  const SaveId = async () => {\n    const storedId = await AsyncStorage.getItem('selectedTicketId');\n    return storedId;\n  };\n  const autoPages = async () => {\n    try {\n      const routes = await AsyncStorage.getItem('option');\n      if (routes !== null) {\n        return JSON.parse(routes);\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error('Erro ao recuperar a opção:', error);\n      return null;\n    }\n  };\n  const ChatScreen = async () => {\n    try {\n      const storedId = await SaveId();\n      const TokenObject = await TokenAPI();\n      const routes = await autoPages();\n      const res = await fetch(`http://ti.ararangua.sc.gov.br:10000/glpi/apirest.php/${routes}/${storedId}`, {\n        method: \"GET\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': TokenObject\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        return [data];\n      } else {\n        console.error(\"Erro em acessar a API 1\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Erro em carregar a API:\", error);\n      return [];\n    }\n  };\n  const chatMensagemScreen = async () => {\n    try {\n      const storedId = await SaveId();\n      const tokenObject = await TokenAPI();\n      const routes = await autoPages();\n      const res = await fetch(`http://ti.ararangua.sc.gov.br:10000/glpi/apirest.php/${routes}/${storedId}/ITILFollowup/`, {\n        method: \"GET\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        return data;\n      } else {\n        console.error(\"Erro em acessar a API 2\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Erro em carregar a API:\", error);\n      return [];\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      const storedId = await SaveId();\n      const tokenObject = await TokenAPI();\n      const routes = await autoPages();\n      if (!newMessage.trim()) {\n        console.error(\"Mensagem está vazia\");\n        return;\n      }\n      const res = await fetch(`http://ti.ararangua.sc.gov.br:10000/glpi/apirest.php/${routes}/${storedId}/ITILFollowup/`, {\n        method: \"POST\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: {\n            content: newMessage\n          }\n        })\n      });\n      if (res.ok) {\n        console.log(\"Mensagem enviada com sucesso\");\n        setNewMessage(\"\");\n        const data = await chatMensagemScreen();\n        setChatMensagemData(data);\n      } else {\n        const errorData = await res.json();\n        console.error(\"Erro ao enviar a mensagem:\", errorData);\n      }\n    } catch (error) {\n      console.error(\"Erro ao enviar a mensagem:\", error);\n    }\n  };\n  const getFullSession = async () => {\n    try {\n      const tokenObject = await TokenAPI();\n      const appToken = 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R';\n      const res = await fetch('http://ti.ararangua.sc.gov.br:10000/glpi/apirest.php/getFullSession/', {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Session-Token': tokenObject,\n          'App-Token': appToken\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        console.log(\"Sessão completa:\", data);\n        return data;\n      } else {\n        const errorData = await res.json();\n        console.error(\"Erro ao obter a sessão completa:\", errorData);\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Erro ao obter a sessão completa:\", error);\n      return null;\n    }\n  };\n  const updateMessage = async (messageId, updatedContent) => {\n    try {\n      const storedId = await SaveId();\n      const tokenObject = await TokenAPI();\n      const routes = await autoPages();\n      const res = await fetch(`http://ti.ararangua.sc.gov.br:10000/glpi/apirest.php/${routes}/${storedId}/ITILFollowup/${messageId}`, {\n        method: \"POST\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: {\n            content: updatedContent\n          }\n        })\n      });\n      if (res.ok) {\n        console.log(\"Mensagem atualizada com sucesso\");\n        const data = await chatMensagemScreen();\n        setChatMensagemData(data);\n      } else {\n        const errorData = await res.json();\n        console.error(\"Erro ao atualizar a mensagem:\", errorData);\n      }\n    } catch (error) {\n      console.error(\"Erro ao atualizar a mensagem:\", error);\n    }\n  };\n  const editMessage = (messageId, currentContent) => {\n    setNewMessage(currentContent);\n    setEditingMessageId(messageId);\n  };\n  const handleSendOrUpdateMessage = async () => {\n    if (editingMessageId) {\n      await updateMessage(editingMessageId, newMessage);\n      setEditingMessageId(null);\n    } else {\n      await sendMessage();\n    }\n    setNewMessage(\"\");\n  };\n  const textHeaderRoutes = async () => {\n    const routes = await autoPages();\n    switch (routes) {\n      case 'Ticket':\n        return 'Tickets';\n      case 'Computer':\n        return 'Computadores';\n      case 'Printer':\n        return 'Impressoras';\n      default:\n        return 'erro';\n    }\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(Animatable.View, {\n      style: styles.container,\n      children: _jsxDEV(Animatable.Image, {\n        animation: \"flipInY\",\n        source: logo,\n        style: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), _jsxDEV(Animatable.View, {\n      delay: 400,\n      animation: \"fadeInUp\",\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        onPress: () => navigation.navigate('Serviços'),\n        children: _jsxDEV(Text, {\n          style: styles.text,\n          children: \"Servi\\xE7os\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.text,\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.text,\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), _jsxDEV(Animatable.View, {\n      delay: 400,\n      animation: \"fadeInUp\",\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.headerText,\n        children: [\"Chat Chamados \", headerText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), _jsxDEV(FlatList, {\n        data: chatData,\n        keyExtractor: item => item.id.toString(),\n        renderItem: ({\n          item\n        }) => _jsxDEV(View, {\n          style: styles.chatItem,\n          children: [_jsxDEV(Text, {\n            style: styles.headerTextChat,\n            children: [\"Chat com \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), _jsxDEV(Text, {\n            children: [\"(\", item.id, \") - \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this), _jsxDEV(Text, {\n            children: item.contact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this), _jsxDEV(Text, {\n            children: [\"(\", item.serial, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), chatVisible && _jsxDEV(View, {\n        style: styles.containerChat,\n        children: _jsxDEV(FlatList, {\n          data: chatMensagemData,\n          keyExtractor: item => item.id.toString(),\n          renderItem: ({\n            item\n          }) => _jsxDEV(View, {\n            style: styles.chatbox,\n            children: [_jsxDEV(Text, {\n              children: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 37\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: () => editMessage(item.id, item.content),\n              children: _jsxDEV(Text, {\n                style: styles.editButtonText,\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Digite sua mensagem...\",\n        value: newMessage,\n        onChangeText: setNewMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), _jsxDEV(TouchableOpacity, {\n        onPress: handleSendOrUpdateMessage,\n        style: styles.sendButton,\n        children: _jsxDEV(Text, {\n          style: styles.text,\n          children: editingMessageId ? \"Atualizar\" : \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this), _jsxDEV(Animatable.View, {\n      delay: 400,\n      animation: \"fadeInUp\",\n      children: _jsxDEV(TouchableOpacity, {\n        onPress: () => navigation.navigate('Serviços'),\n        style: styles.button,\n        children: _jsxDEV(Text, {\n          style: styles.text,\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 20,\n    paddingTop: 40\n  },\n  image: {\n    alignSelf: 'center',\n    marginBottom: 20\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    backgroundColor: '#498DF3'\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    padding: 10\n  },\n  containerChat: {\n    marginBottom: 20\n  },\n  headerTextChat: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  chatbox: {\n    backgroundColor: \"#DBE6FD\",\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 10,\n    marginEnd: '30%'\n  },\n  input: {\n    backgroundColor: \"#ADD8E6\",\n    borderRadius: 8,\n    marginBottom: 10,\n    padding: 10,\n    textAlign: 'right',\n    marginStart: '30%'\n  },\n  sendButton: {\n    backgroundColor: \"#498DF3\",\n    borderRadius: 6,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  text: {\n    color: \"#fff\",\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: \"#498DF3\",\n    borderRadius: 6,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: '50%'\n  },\n  chatItem: {\n    backgroundColor: \"#DBE6FD\",\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    marginBottom: 10\n  }\n});\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","Text","StyleSheet","TouchableOpacity","View","TextInput","FlatList","Image","logo","Animatable","useNavigation","AsyncStorage","jsxDEV","_jsxDEV","Chat","navigation","chatData","setChatData","chatMensagemData","setChatMensagemData","newMessage","setNewMessage","headerText","setHeaderText","chatVisible","setChatVisible","editingMessageId","setEditingMessageId","fetchData","data","ChatScreen","chatMensagemScreen","length","updateHeaderText","text","textHeaderRoutes","fetchFullSession","sessionData","getFullSession","console","log","TokenAPI","storedSessionToken","getItem","tokenPart","replace","split","tokenObject","JSON","parse","SaveId","storedId","autoPages","routes","error","TokenObject","res","fetch","method","headers","ok","json","sendMessage","trim","body","stringify","input","content","errorData","appToken","updateMessage","messageId","updatedContent","editMessage","currentContent","handleSendOrUpdateMessage","children","style","styles","container","animation","source","image","fileName","_jsxFileName","lineNumber","columnNumber","delay","header","onPress","navigate","keyExtractor","item","id","toString","renderItem","chatItem","headerTextChat","name","contact","serial","containerChat","chatbox","editButtonText","placeholder","value","onChangeText","sendButton","button","create","backgroundColor","paddingHorizontal","paddingTop","alignSelf","marginBottom","flexDirection","justifyContent","fontSize","fontWeight","padding","textAlign","borderRadius","marginEnd","marginStart","paddingVertical","alignItems","color","width"],"sources":["/home/luigi/Área de Trabalho/glpi-app-react/src/pages/Components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, StyleSheet, TouchableOpacity, View, TextInput, FlatList, Image } from \"react-native\";\nimport logo from '../assets/logo.png';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst Chat = () => {\n    const navigation = useNavigation();\n    const [chatData, setChatData] = useState([]);\n    const [chatMensagemData, setChatMensagemData] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n    const [headerText, setHeaderText] = useState(\"Chat\");\n    const [chatVisible, setChatVisible] = useState(true);\n    const [editingMessageId, setEditingMessageId] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const data = await ChatScreen();\n            setChatData(data);\n        };\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const data = await chatMensagemScreen();\n            setChatMensagemData(data);\n            setChatVisible(data && data.length > 0);\n        };\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        const updateHeaderText = async () => {\n            const text = await textHeaderRoutes();\n            setHeaderText(text);\n        };\n        updateHeaderText();\n    }, []);\n\n    useEffect(() => {\n        const fetchFullSession = async () => {\n            const sessionData = await getFullSession();\n            if (sessionData) {\n                console.log(\"Dados da sessão:\", sessionData);\n            }\n        };\n        fetchFullSession();\n    }, []);\n\n    const TokenAPI = async () => {\n        const storedSessionToken = await AsyncStorage.getItem('sessionToken');\n        const [, tokenPart] = storedSessionToken.replace(/[{}]/g, '').split(':');\n        const tokenObject = JSON.parse(tokenPart);\n        return tokenObject;\n    };\n\n    const SaveId = async () => {\n        const storedId = await AsyncStorage.getItem('selectedTicketId');\n        return storedId;\n    };\n\n    const autoPages = async () => {\n        try {\n            const routes = await AsyncStorage.getItem('option');\n            if (routes !== null) {\n                return JSON.parse(routes);\n            } else {\n                return null;\n            }\n        } catch (error) {\n            console.error('Erro ao recuperar a opção:', error);\n            return null;\n        }\n    }\n\n    const ChatScreen = async () => {\n        try {\n            const storedId = await SaveId();\n            const TokenObject = await TokenAPI();\n            const routes = await autoPages();\n           // console.log(routes);\n           // console.log(storedId);\n\n            const res = await fetch(`http://ti.ararangua.sc.gov.br:10000/glpi/apirest.php/${routes}/${storedId}`, {\n                method: \"GET\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': TokenObject,\n                },\n            });\n\n            if (res.ok) {\n                const data = await res.json();\n                return [data];\n            } else {\n                console.error(\"Erro em acessar a API 1\");\n                return [];\n            }\n        } catch (error) {\n            console.error(\"Erro em carregar a API:\", error);\n            return [];\n        }\n    };\n\n    const chatMensagemScreen = async () => {\n        try {\n            const storedId = await SaveId();\n            const tokenObject = await TokenAPI();\n            const routes = await autoPages();\n            //console.log(routes);\n\n            const res = await fetch(`http://ti.ararangua.sc.gov.br:10000/glpi/apirest.php/${routes}/${storedId}/ITILFollowup/`, {\n                method: \"GET\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                },\n            });\n\n            if (res.ok) {\n                const data = await res.json();\n                return data;\n            } else {\n                console.error(\"Erro em acessar a API 2\");\n                return [];\n            }\n        } catch (error) {\n            console.error(\"Erro em carregar a API:\", error);\n            return [];\n        }\n    };\n\n    const sendMessage = async () => {\n        try {\n            const storedId = await SaveId();\n            const tokenObject = await TokenAPI();\n            const routes = await autoPages();\n\n            if (!newMessage.trim()) {\n                console.error(\"Mensagem está vazia\");\n                return;\n            }\n\n            const res = await fetch(`http://ti.ararangua.sc.gov.br:10000/glpi/apirest.php/${routes}/${storedId}/ITILFollowup/`, {\n                method: \"POST\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ input: { content: newMessage } })\n            });\n\n            if (res.ok) {\n                console.log(\"Mensagem enviada com sucesso\");\n                setNewMessage(\"\");\n                const data = await chatMensagemScreen();\n                setChatMensagemData(data);\n            } else {\n                const errorData = await res.json();\n                console.error(\"Erro ao enviar a mensagem:\", errorData);\n            }\n        } catch (error) {\n            console.error(\"Erro ao enviar a mensagem:\", error);\n        }\n    };\n\n\n    const getFullSession = async () => {\n        try {\n            const tokenObject = await TokenAPI(); // Obter o token da sessão armazenada\n            const appToken = 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R'; // Substitua pelo seu App-Token\n    \n            const res = await fetch('http://ti.ararangua.sc.gov.br:10000/glpi/apirest.php/getFullSession/', {\n                method: \"GET\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Session-Token': tokenObject,\n                    'App-Token': appToken,\n                },\n            });\n    \n            if (res.ok) {\n                const data = await res.json();\n                console.log(\"Sessão completa:\", data);\n                return data;\n            } else {\n                const errorData = await res.json();\n                console.error(\"Erro ao obter a sessão completa:\", errorData);\n                return null;\n            }\n        } catch (error) {\n            console.error(\"Erro ao obter a sessão completa:\", error);\n            return null;\n        }\n    };\n\n\n    const updateMessage = async (messageId, updatedContent) => {\n        try {\n            const storedId = await SaveId();\n            const tokenObject = await TokenAPI();\n            const routes = await autoPages();\n\n            const res = await fetch(`http://ti.ararangua.sc.gov.br:10000/glpi/apirest.php/${routes}/${storedId}/ITILFollowup/${messageId}`, {\n                method: \"POST\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ input: { content: updatedContent } })\n            });\n\n            if (res.ok) {\n                console.log(\"Mensagem atualizada com sucesso\");\n                const data = await chatMensagemScreen();\n                setChatMensagemData(data);\n            } else {\n                const errorData = await res.json();\n                console.error(\"Erro ao atualizar a mensagem:\", errorData);\n            }\n        } catch (error) {\n            console.error(\"Erro ao atualizar a mensagem:\", error);\n        }\n    };\n\n    const editMessage = (messageId, currentContent) => {\n        setNewMessage(currentContent);\n        setEditingMessageId(messageId);\n    };\n\n    const handleSendOrUpdateMessage = async () => {\n        if (editingMessageId) {\n            await updateMessage(editingMessageId, newMessage);\n            setEditingMessageId(null);\n        } else {\n            await sendMessage();\n        }\n        setNewMessage(\"\");\n    };\n\n    const textHeaderRoutes = async () => {\n        const routes = await autoPages();\n        switch (routes) {\n            case 'Ticket': return 'Tickets';\n            case 'Computer': return 'Computadores';\n            case 'Printer': return 'Impressoras';\n            default: return 'erro';\n        }\n    };\n\n    return (\n        <View>\n            <Animatable.View style={styles.container}>\n                <Animatable.Image\n                    animation={\"flipInY\"}\n                    source={logo}\n                    style={styles.image} />\n            </Animatable.View>\n\n            <Animatable.View delay={400} animation={\"fadeInUp\"} style={styles.header}>\n                <TouchableOpacity onPress={() => navigation.navigate('Serviços')}>\n                    <Text style={styles.text}>Serviços</Text>\n                </TouchableOpacity>\n                <Text style={styles.text}>/</Text>\n                <Text style={styles.text}>Chat</Text>\n            </Animatable.View>\n\n            <Animatable.View delay={400} animation={\"fadeInUp\"} style={styles.container}>\n                <Text style={styles.headerText}>Chat Chamados {headerText}</Text>\n\n                <FlatList\n                    data={chatData}\n                    keyExtractor={(item) => item.id.toString()}\n                    renderItem={({ item }) => (\n                        <View style={styles.chatItem}>\n                            <Text style={styles.headerTextChat}>Chat com {item.name}</Text>\n                            <Text>({item.id}) - {item.name}</Text>\n\n                            <Text>{item.contact}</Text>\n                            <Text>({item.serial})</Text>\n                        </View>\n                    )}\n                />\n                {chatVisible && (\n                    <View style={styles.containerChat}>\n                        <FlatList\n                            data={chatMensagemData}\n                            keyExtractor={(item) => item.id.toString()}\n                            renderItem={({ item }) => (\n                                <View style={styles.chatbox}>\n                                    <Text>{item.content}</Text>\n                                    <TouchableOpacity onPress={() => editMessage(item.id, item.content)}>\n                                        <Text style={styles.editButtonText}>Editar</Text>\n                                    </TouchableOpacity>\n                                </View>\n                            )}\n                        />\n                    </View>\n                )}\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Digite sua mensagem...\"\n                    value={newMessage}\n                    onChangeText={setNewMessage}\n                />\n                <TouchableOpacity onPress={handleSendOrUpdateMessage} style={styles.sendButton}>\n                    <Text style={styles.text}>{editingMessageId ? \"Atualizar\" : \"Enviar\"}</Text>\n                </TouchableOpacity>\n            </Animatable.View>\n\n            <Animatable.View delay={400} animation={\"fadeInUp\"}>\n                <TouchableOpacity\n                    onPress={() => navigation.navigate('Serviços')}\n                    style={styles.button}>\n                    <Text style={styles.text}>Voltar</Text>\n                </TouchableOpacity>\n            </Animatable.View>\n        </View>\n    );\n};\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"#fff\",\n        paddingHorizontal: 20, \n        paddingTop: 40, \n    },\n    image: {\n        alignSelf: 'center',\n        marginBottom: 20, \n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent:'space-around',\n        backgroundColor: '#498DF3',\n    },\n    headerText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        padding: 10,\n    },\n    containerChat: {\n        marginBottom: 20, \n    },\n    headerTextChat: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        textAlign: 'center', \n    },\n    chatbox: {\n        backgroundColor: \"#DBE6FD\",\n        borderRadius: 8,\n        padding: 10,\n        marginBottom: 10,\n        marginEnd: '30%',\n    },\n    input: {\n        backgroundColor: \"#ADD8E6\",\n        borderRadius: 8,\n        marginBottom: 10,\n        padding: 10,\n        textAlign: 'right',\n        marginStart: '30%',\n    },\n    sendButton: {\n        backgroundColor: \"#498DF3\",\n        borderRadius: 6,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginBottom: 10,\n    },\n    text: {\n        color: \"#fff\",\n        fontSize: 16,\n    },\n    button: {\n        backgroundColor: \"#498DF3\",\n        borderRadius: 6,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: '50%' \n    },\n    chatItem: {\n        backgroundColor: \"#DBE6FD\",\n        borderRadius: 8,\n        paddingHorizontal: 15,\n        paddingVertical: 10,\n        marginBottom: 10,\n    },\n});\nexport default Chat;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,KAAA;AAEnD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAO,KAAKC,UAAU,MAAM,yBAAyB;AACrD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf,MAAMC,UAAU,GAAGL,aAAa,CAAC,CAAC;EAClC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACZ,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,IAAI,GAAG,MAAMC,UAAU,CAAC,CAAC;MAC/Bb,WAAW,CAACY,IAAI,CAAC;IACrB,CAAC;IACDD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACZ,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,IAAI,GAAG,MAAME,kBAAkB,CAAC,CAAC;MACvCZ,mBAAmB,CAACU,IAAI,CAAC;MACzBJ,cAAc,CAACI,IAAI,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC;IAC3C,CAAC;IACDJ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACZ,MAAMiC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,IAAI,GAAG,MAAMC,gBAAgB,CAAC,CAAC;MACrCZ,aAAa,CAACW,IAAI,CAAC;IACvB,CAAC;IACDD,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAENjC,SAAS,CAAC,MAAM;IACZ,MAAMoC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,WAAW,GAAG,MAAMC,cAAc,CAAC,CAAC;MAC1C,IAAID,WAAW,EAAE;QACbE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,WAAW,CAAC;MAChD;IACJ,CAAC;IACDD,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,kBAAkB,GAAG,MAAM/B,YAAY,CAACgC,OAAO,CAAC,cAAc,CAAC;IACrE,MAAM,GAAGC,SAAS,CAAC,GAAGF,kBAAkB,CAACG,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACxE,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;IACzC,OAAOG,WAAW;EACtB,CAAC;EAED,MAAMG,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,MAAMC,QAAQ,GAAG,MAAMxC,YAAY,CAACgC,OAAO,CAAC,kBAAkB,CAAC;IAC/D,OAAOQ,QAAQ;EACnB,CAAC;EAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,MAAM,GAAG,MAAM1C,YAAY,CAACgC,OAAO,CAAC,QAAQ,CAAC;MACnD,IAAIU,MAAM,KAAK,IAAI,EAAE;QACjB,OAAOL,IAAI,CAACC,KAAK,CAACI,MAAM,CAAC;MAC7B,CAAC,MAAM;QACH,OAAO,IAAI;MACf;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZf,OAAO,CAACe,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO,IAAI;IACf;EACJ,CAAC;EAED,MAAMxB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMqB,QAAQ,GAAG,MAAMD,MAAM,CAAC,CAAC;MAC/B,MAAMK,WAAW,GAAG,MAAMd,QAAQ,CAAC,CAAC;MACpC,MAAMY,MAAM,GAAG,MAAMD,SAAS,CAAC,CAAC;MAIhC,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,wDAAwDJ,MAAM,IAAIF,QAAQ,EAAE,EAAE;QAClGO,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,WAAW,EAAE,0CAA0C;UACvD,eAAe,EAAEJ;QACrB;MACJ,CAAC,CAAC;MAEF,IAAIC,GAAG,CAACI,EAAE,EAAE;QACR,MAAM/B,IAAI,GAAG,MAAM2B,GAAG,CAACK,IAAI,CAAC,CAAC;QAC7B,OAAO,CAAChC,IAAI,CAAC;MACjB,CAAC,MAAM;QACHU,OAAO,CAACe,KAAK,CAAC,yBAAyB,CAAC;QACxC,OAAO,EAAE;MACb;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZf,OAAO,CAACe,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO,EAAE;IACb;EACJ,CAAC;EAED,MAAMvB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACA,MAAMoB,QAAQ,GAAG,MAAMD,MAAM,CAAC,CAAC;MAC/B,MAAMH,WAAW,GAAG,MAAMN,QAAQ,CAAC,CAAC;MACpC,MAAMY,MAAM,GAAG,MAAMD,SAAS,CAAC,CAAC;MAGhC,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,wDAAwDJ,MAAM,IAAIF,QAAQ,gBAAgB,EAAE;QAChHO,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,WAAW,EAAE,0CAA0C;UACvD,eAAe,EAAEZ;QACrB;MACJ,CAAC,CAAC;MAEF,IAAIS,GAAG,CAACI,EAAE,EAAE;QACR,MAAM/B,IAAI,GAAG,MAAM2B,GAAG,CAACK,IAAI,CAAC,CAAC;QAC7B,OAAOhC,IAAI;MACf,CAAC,MAAM;QACHU,OAAO,CAACe,KAAK,CAAC,yBAAyB,CAAC;QACxC,OAAO,EAAE;MACb;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZf,OAAO,CAACe,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO,EAAE;IACb;EACJ,CAAC;EAED,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMX,QAAQ,GAAG,MAAMD,MAAM,CAAC,CAAC;MAC/B,MAAMH,WAAW,GAAG,MAAMN,QAAQ,CAAC,CAAC;MACpC,MAAMY,MAAM,GAAG,MAAMD,SAAS,CAAC,CAAC;MAEhC,IAAI,CAAChC,UAAU,CAAC2C,IAAI,CAAC,CAAC,EAAE;QACpBxB,OAAO,CAACe,KAAK,CAAC,qBAAqB,CAAC;QACpC;MACJ;MAEA,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,wDAAwDJ,MAAM,IAAIF,QAAQ,gBAAgB,EAAE;QAChHO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,WAAW,EAAE,0CAA0C;UACvD,eAAe,EAAEZ,WAAW;UAC5B,cAAc,EAAE;QACpB,CAAC;QACDiB,IAAI,EAAEhB,IAAI,CAACiB,SAAS,CAAC;UAAEC,KAAK,EAAE;YAAEC,OAAO,EAAE/C;UAAW;QAAE,CAAC;MAC3D,CAAC,CAAC;MAEF,IAAIoC,GAAG,CAACI,EAAE,EAAE;QACRrB,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC3CnB,aAAa,CAAC,EAAE,CAAC;QACjB,MAAMQ,IAAI,GAAG,MAAME,kBAAkB,CAAC,CAAC;QACvCZ,mBAAmB,CAACU,IAAI,CAAC;MAC7B,CAAC,MAAM;QACH,MAAMuC,SAAS,GAAG,MAAMZ,GAAG,CAACK,IAAI,CAAC,CAAC;QAClCtB,OAAO,CAACe,KAAK,CAAC,4BAA4B,EAAEc,SAAS,CAAC;MAC1D;IACJ,CAAC,CAAC,OAAOd,KAAK,EAAE;MACZf,OAAO,CAACe,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAGD,MAAMhB,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMS,WAAW,GAAG,MAAMN,QAAQ,CAAC,CAAC;MACpC,MAAM4B,QAAQ,GAAG,0CAA0C;MAE3D,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,sEAAsE,EAAE;QAC5FC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAEZ,WAAW;UAC5B,WAAW,EAAEsB;QACjB;MACJ,CAAC,CAAC;MAEF,IAAIb,GAAG,CAACI,EAAE,EAAE;QACR,MAAM/B,IAAI,GAAG,MAAM2B,GAAG,CAACK,IAAI,CAAC,CAAC;QAC7BtB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEX,IAAI,CAAC;QACrC,OAAOA,IAAI;MACf,CAAC,MAAM;QACH,MAAMuC,SAAS,GAAG,MAAMZ,GAAG,CAACK,IAAI,CAAC,CAAC;QAClCtB,OAAO,CAACe,KAAK,CAAC,kCAAkC,EAAEc,SAAS,CAAC;QAC5D,OAAO,IAAI;MACf;IACJ,CAAC,CAAC,OAAOd,KAAK,EAAE;MACZf,OAAO,CAACe,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,OAAO,IAAI;IACf;EACJ,CAAC;EAGD,MAAMgB,aAAa,GAAG,MAAAA,CAAOC,SAAS,EAAEC,cAAc,KAAK;IACvD,IAAI;MACA,MAAMrB,QAAQ,GAAG,MAAMD,MAAM,CAAC,CAAC;MAC/B,MAAMH,WAAW,GAAG,MAAMN,QAAQ,CAAC,CAAC;MACpC,MAAMY,MAAM,GAAG,MAAMD,SAAS,CAAC,CAAC;MAEhC,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,wDAAwDJ,MAAM,IAAIF,QAAQ,iBAAiBoB,SAAS,EAAE,EAAE;QAC5Hb,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,WAAW,EAAE,0CAA0C;UACvD,eAAe,EAAEZ,WAAW;UAC5B,cAAc,EAAE;QACpB,CAAC;QACDiB,IAAI,EAAEhB,IAAI,CAACiB,SAAS,CAAC;UAAEC,KAAK,EAAE;YAAEC,OAAO,EAAEK;UAAe;QAAE,CAAC;MAC/D,CAAC,CAAC;MAEF,IAAIhB,GAAG,CAACI,EAAE,EAAE;QACRrB,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;QAC9C,MAAMX,IAAI,GAAG,MAAME,kBAAkB,CAAC,CAAC;QACvCZ,mBAAmB,CAACU,IAAI,CAAC;MAC7B,CAAC,MAAM;QACH,MAAMuC,SAAS,GAAG,MAAMZ,GAAG,CAACK,IAAI,CAAC,CAAC;QAClCtB,OAAO,CAACe,KAAK,CAAC,+BAA+B,EAAEc,SAAS,CAAC;MAC7D;IACJ,CAAC,CAAC,OAAOd,KAAK,EAAE;MACZf,OAAO,CAACe,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC;EAED,MAAMmB,WAAW,GAAGA,CAACF,SAAS,EAAEG,cAAc,KAAK;IAC/CrD,aAAa,CAACqD,cAAc,CAAC;IAC7B/C,mBAAmB,CAAC4C,SAAS,CAAC;EAClC,CAAC;EAED,MAAMI,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAIjD,gBAAgB,EAAE;MAClB,MAAM4C,aAAa,CAAC5C,gBAAgB,EAAEN,UAAU,CAAC;MACjDO,mBAAmB,CAAC,IAAI,CAAC;IAC7B,CAAC,MAAM;MACH,MAAMmC,WAAW,CAAC,CAAC;IACvB;IACAzC,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMkB,MAAM,GAAG,MAAMD,SAAS,CAAC,CAAC;IAChC,QAAQC,MAAM;MACV,KAAK,QAAQ;QAAE,OAAO,SAAS;MAC/B,KAAK,UAAU;QAAE,OAAO,cAAc;MACtC,KAAK,SAAS;QAAE,OAAO,aAAa;MACpC;QAAS,OAAO,MAAM;IAC1B;EACJ,CAAC;EAED,OACIxC,OAAA,CAACT,IAAI;IAAAwE,QAAA,GACD/D,OAAA,CAACJ,UAAU,CAACL,IAAI;MAACyE,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,EACrC/D,OAAA,CAACJ,UAAU,CAACF,KAAK;QACbyE,SAAS,EAAE,SAAU;QACrBC,MAAM,EAAEzE,IAAK;QACbqE,KAAK,EAAEC,MAAM,CAACI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EAElBzE,OAAA,CAACJ,UAAU,CAACL,IAAI;MAACmF,KAAK,EAAE,GAAI;MAACP,SAAS,EAAE,UAAW;MAACH,KAAK,EAAEC,MAAM,CAACU,MAAO;MAAAZ,QAAA,GACrE/D,OAAA,CAACV,gBAAgB;QAACsF,OAAO,EAAEA,CAAA,KAAM1E,UAAU,CAAC2E,QAAQ,CAAC,UAAU,CAAE;QAAAd,QAAA,EAC7D/D,OAAA,CAACZ,IAAI;UAAC4E,KAAK,EAAEC,MAAM,CAAC5C,IAAK;UAAA0C,QAAA,EAAC;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,EACnBzE,OAAA,CAACZ,IAAI;QAAC4E,KAAK,EAAEC,MAAM,CAAC5C,IAAK;QAAA0C,QAAA,EAAC;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAClCzE,OAAA,CAACZ,IAAI;QAAC4E,KAAK,EAAEC,MAAM,CAAC5C,IAAK;QAAA0C,QAAA,EAAC;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EAElBzE,OAAA,CAACJ,UAAU,CAACL,IAAI;MAACmF,KAAK,EAAE,GAAI;MAACP,SAAS,EAAE,UAAW;MAACH,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,GACxE/D,OAAA,CAACZ,IAAI;QAAC4E,KAAK,EAAEC,MAAM,CAACxD,UAAW;QAAAsD,QAAA,GAAC,gBAAc,EAACtD,UAAU;MAAA;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAEjEzE,OAAA,CAACP,QAAQ;QACLuB,IAAI,EAAEb,QAAS;QACf2E,YAAY,EAAGC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAE;QAC3CC,UAAU,EAAEA,CAAC;UAAEH;QAAK,CAAC,KACjB/E,OAAA,CAACT,IAAI;UAACyE,KAAK,EAAEC,MAAM,CAACkB,QAAS;UAAApB,QAAA,GACzB/D,OAAA,CAACZ,IAAI;YAAC4E,KAAK,EAAEC,MAAM,CAACmB,cAAe;YAAArB,QAAA,GAAC,WAAS,EAACgB,IAAI,CAACM,IAAI;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC/DzE,OAAA,CAACZ,IAAI;YAAA2E,QAAA,GAAC,GAAC,EAACgB,IAAI,CAACC,EAAE,EAAC,MAAI,EAACD,IAAI,CAACM,IAAI;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAEtCzE,OAAA,CAACZ,IAAI;YAAA2E,QAAA,EAAEgB,IAAI,CAACO;UAAO;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC3BzE,OAAA,CAACZ,IAAI;YAAA2E,QAAA,GAAC,GAAC,EAACgB,IAAI,CAACQ,MAAM,EAAC,GAAC;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MACR;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EACD9D,WAAW,IACRX,OAAA,CAACT,IAAI;QAACyE,KAAK,EAAEC,MAAM,CAACuB,aAAc;QAAAzB,QAAA,EAC9B/D,OAAA,CAACP,QAAQ;UACLuB,IAAI,EAAEX,gBAAiB;UACvByE,YAAY,EAAGC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAE;UAC3CC,UAAU,EAAEA,CAAC;YAAEH;UAAK,CAAC,KACjB/E,OAAA,CAACT,IAAI;YAACyE,KAAK,EAAEC,MAAM,CAACwB,OAAQ;YAAA1B,QAAA,GACxB/D,OAAA,CAACZ,IAAI;cAAA2E,QAAA,EAAEgB,IAAI,CAACzB;YAAO;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAC3BzE,OAAA,CAACV,gBAAgB;cAACsF,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACmB,IAAI,CAACC,EAAE,EAAED,IAAI,CAACzB,OAAO,CAAE;cAAAS,QAAA,EAChE/D,OAAA,CAACZ,IAAI;gBAAC4E,KAAK,EAAEC,MAAM,CAACyB,cAAe;gBAAA3B,QAAA,EAAC;cAAM;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB;QACR;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACT,EACDzE,OAAA,CAACR,SAAS;QACNwE,KAAK,EAAEC,MAAM,CAACZ,KAAM;QACpBsC,WAAW,EAAC,wBAAwB;QACpCC,KAAK,EAAErF,UAAW;QAClBsF,YAAY,EAAErF;MAAc;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,EACFzE,OAAA,CAACV,gBAAgB;QAACsF,OAAO,EAAEd,yBAA0B;QAACE,KAAK,EAAEC,MAAM,CAAC6B,UAAW;QAAA/B,QAAA,EAC3E/D,OAAA,CAACZ,IAAI;UAAC4E,KAAK,EAAEC,MAAM,CAAC5C,IAAK;UAAA0C,QAAA,EAAElD,gBAAgB,GAAG,WAAW,GAAG;QAAQ;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAElBzE,OAAA,CAACJ,UAAU,CAACL,IAAI;MAACmF,KAAK,EAAE,GAAI;MAACP,SAAS,EAAE,UAAW;MAAAJ,QAAA,EAC/C/D,OAAA,CAACV,gBAAgB;QACbsF,OAAO,EAAEA,CAAA,KAAM1E,UAAU,CAAC2E,QAAQ,CAAC,UAAU,CAAE;QAC/Cb,KAAK,EAAEC,MAAM,CAAC8B,MAAO;QAAAhC,QAAA,EACrB/D,OAAA,CAACZ,IAAI;UAAC4E,KAAK,EAAEC,MAAM,CAAC5C,IAAK;UAAA0C,QAAA,EAAC;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEf,CAAC;AACD,MAAMR,MAAM,GAAG5E,UAAU,CAAC2G,MAAM,CAAC;EAC7B9B,SAAS,EAAE;IACP+B,eAAe,EAAE,MAAM;IACvBC,iBAAiB,EAAE,EAAE;IACrBC,UAAU,EAAE;EAChB,CAAC;EACD9B,KAAK,EAAE;IACH+B,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE;EAClB,CAAC;EACD1B,MAAM,EAAE;IACJ2B,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAC,cAAc;IAC7BN,eAAe,EAAE;EACrB,CAAC;EACDxF,UAAU,EAAE;IACR+F,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,OAAO,EAAE;EACb,CAAC;EACDlB,aAAa,EAAE;IACXa,YAAY,EAAE;EAClB,CAAC;EACDjB,cAAc,EAAE;IACZoB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBJ,YAAY,EAAE,EAAE;IAChBM,SAAS,EAAE;EACf,CAAC;EACDlB,OAAO,EAAE;IACLQ,eAAe,EAAE,SAAS;IAC1BW,YAAY,EAAE,CAAC;IACfF,OAAO,EAAE,EAAE;IACXL,YAAY,EAAE,EAAE;IAChBQ,SAAS,EAAE;EACf,CAAC;EACDxD,KAAK,EAAE;IACH4C,eAAe,EAAE,SAAS;IAC1BW,YAAY,EAAE,CAAC;IACfP,YAAY,EAAE,EAAE;IAChBK,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,OAAO;IAClBG,WAAW,EAAE;EACjB,CAAC;EACDhB,UAAU,EAAE;IACRG,eAAe,EAAE,SAAS;IAC1BW,YAAY,EAAE,CAAC;IACfG,eAAe,EAAE,EAAE;IACnBb,iBAAiB,EAAE,EAAE;IACrBc,UAAU,EAAE,QAAQ;IACpBT,cAAc,EAAE,QAAQ;IACxBF,YAAY,EAAE;EAClB,CAAC;EACDhF,IAAI,EAAE;IACF4F,KAAK,EAAE,MAAM;IACbT,QAAQ,EAAE;EACd,CAAC;EACDT,MAAM,EAAE;IACJE,eAAe,EAAE,SAAS;IAC1BW,YAAY,EAAE,CAAC;IACfG,eAAe,EAAE,EAAE;IACnBb,iBAAiB,EAAE,EAAE;IACrBc,UAAU,EAAE,QAAQ;IACpBT,cAAc,EAAE,QAAQ;IACxBW,KAAK,EAAE;EACX,CAAC;EACD/B,QAAQ,EAAE;IACNc,eAAe,EAAE,SAAS;IAC1BW,YAAY,EAAE,CAAC;IACfV,iBAAiB,EAAE,EAAE;IACrBa,eAAe,EAAE,EAAE;IACnBV,YAAY,EAAE;EAClB;AACJ,CAAC,CAAC;AACF,eAAepG,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}