{"ast":null,"code":"var _jsxFileName = \"/home/luigi/\\xC1rea de Trabalho/glpi-app-react/src/pages/Login/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Animatable from 'react-native-animatable';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport utf8 from 'utf8';\nimport base64 from 'base-64';\nimport logo from '../assets/logo.png';\nimport gear from '../assets/gear.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const navigation = useNavigation();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [saveUser, setSaveUser] = useState(false);\n  const [selectedOption, setSelectedOption] = useState('');\n  const saveAcount = async () => {\n    try {\n      await AsyncStorage.setItem('Acount', selectedOption);\n    } catch (error) {\n      console.error('Conta não Armazenada', error);\n    }\n  };\n  const clearSavedPages = async () => {\n    try {\n      await AsyncStorage.removeItem('Computer');\n      await AsyncStorage.removeItem('Ticket');\n      await AsyncStorage.removeItem('Printer');\n    } catch (error) {\n      console.error('Erro ao limpar os valores salvos:', error);\n    }\n  };\n  useEffect(() => {\n    clearSavedPages();\n    const unsubscribe = navigation.addListener('beforeRemove', () => {\n      AsyncStorage.removeItem('Credenciais');\n    });\n    return unsubscribe;\n  }, []);\n  const loadStoredCredentials = async () => {\n    try {\n      const storedData = await AsyncStorage.getItem('Credenciais');\n      if (storedData) {\n        const parsedData = JSON.parse(storedData);\n        setUsername(parsedData.username || '');\n        setPassword(parsedData.password || '');\n      }\n    } catch (error) {\n      console.error(\"Erro ao carregar credenciais salvas:\", error);\n    }\n  };\n  const saveNewCredentials = async () => {\n    try {\n      const newCredentials = {\n        username,\n        password\n      };\n      const storedUsers = await AsyncStorage.getItem('Users');\n      let usersArray = storedUsers ? JSON.parse(storedUsers) : [];\n      const userExists = usersArray.some(user => user.username === username);\n      if (userExists) {\n        Alert.alert('Erro', 'Usuário já existe. Tente outro nome de usuário.');\n        return;\n      }\n      usersArray.push(newCredentials);\n      await AsyncStorage.setItem('Users', JSON.stringify(usersArray));\n      Alert.alert('Sucesso', 'Novas credenciais salvas com sucesso!');\n    } catch (error) {\n      Alert.alert('Erro', 'Falha ao salvar novas credenciais.');\n    }\n  };\n  const handleLogin = async () => {\n    const texto = `${username}:${password}`;\n    const bytes = utf8.encode(texto);\n    const encoded = base64.encode(bytes);\n    await AsyncStorage.setItem('encoded', encoded);\n    if (!username || !password || !selectedOption) {\n      Alert.alert('Erro', 'Preencha todos os campos e selecione uma opção');\n      return;\n    }\n    try {\n      const res = await fetch('http://ti.ararangua.sc.gov.br:10000/glpi/apirest.php/initSession', {\n        method: \"GET\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Authorization': 'Basic ' + encoded\n        }\n      });\n      const json = await res.json();\n      if (json && json[0] === 'ERROR_GLPI_LOGIN') {\n        Alert.alert('Erro', 'Nome de usuário ou senha inválidos. Tente novamente.');\n      } else {\n        await AsyncStorage.setItem('sessionToken', JSON.stringify(json));\n        await AsyncStorage.setItem('Credenciais', JSON.stringify({\n          username,\n          password\n        }));\n        await saveAcount();\n        if (saveUser) {\n          await AsyncStorage.setItem('user', username);\n        }\n        navigation.navigate('Serviços');\n        return selectedOption;\n      }\n    } catch (error) {\n      console.error(error);\n      Alert.alert('Erro', 'Falha ao autenticar. Verifique suas credenciais e tente novamente.');\n    }\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(View, {\n      style: styles.containerHeader,\n      children: _jsxDEV(View, {\n        children: _jsxDEV(Animatable.Image, {\n          animation: \"flipInY\",\n          source: logo,\n          style: styles.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      children: [_jsxDEV(View, {\n        style: styles.containerLogin,\n        children: [_jsxDEV(Text, {\n          style: styles.texto,\n          children: \"Usu\\xE1rio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Login...\",\n          style: styles.input,\n          onChangeText: setUsername,\n          value: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          style: styles.bar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          style: styles.texto,\n          children: \"Senha:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Senha...\",\n          style: styles.input,\n          onChangeText: setPassword,\n          value: password,\n          secureTextEntry: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          style: styles.bar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), _jsxDEV(View, {\n          style: styles.optionsContainer,\n          children: [_jsxDEV(TouchableOpacity, {\n            style: [styles.optionButton, selectedOption === 'TI' && styles.selectedOption],\n            onPress: () => setSelectedOption('TI'),\n            children: _jsxDEV(Text, {\n              style: styles.optionText,\n              children: \"TI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: [styles.optionButton, selectedOption === 'Banco Interno' && styles.selectedOption],\n            onPress: () => setSelectedOption('Banco Interno'),\n            children: _jsxDEV(Text, {\n              style: styles.optionText,\n              children: \"Banco Interno\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.button,\n          onPress: handleLogin,\n          children: _jsxDEV(Text, {\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.button,\n          onPress: saveNewCredentials,\n          children: _jsxDEV(Text, {\n            children: \"Salvar Novas Credenciais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), _jsxDEV(View, {\n        children: _jsxDEV(TouchableOpacity, {\n          style: styles.gear,\n          onPress: () => navigation.navigate('Servidores'),\n          children: _jsxDEV(Image, {\n            source: gear,\n            style: styles.gear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\nconst styles = StyleSheet.create({\n  containerHeader: {},\n  image: {},\n  containerLogin: {},\n  texto: {},\n  input: {},\n  bar: {},\n  button: {},\n  gear: {},\n  optionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginVertical: 20\n  },\n  optionButton: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5\n  },\n  selectedOption: {\n    backgroundColor: '#d3d3d3'\n  },\n  optionText: {\n    fontSize: 16\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","StyleSheet","TouchableOpacity","TextInput","Alert","useNavigation","Animatable","AsyncStorage","utf8","base64","logo","gear","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","navigation","username","setUsername","password","setPassword","saveUser","setSaveUser","selectedOption","setSelectedOption","saveAcount","setItem","error","console","clearSavedPages","removeItem","unsubscribe","addListener","loadStoredCredentials","storedData","getItem","parsedData","JSON","parse","saveNewCredentials","newCredentials","storedUsers","usersArray","userExists","some","user","alert","push","stringify","handleLogin","texto","bytes","encode","encoded","res","fetch","method","headers","json","navigate","children","style","styles","containerHeader","animation","source","image","fileName","_jsxFileName","lineNumber","columnNumber","containerLogin","placeholder","input","onChangeText","value","bar","secureTextEntry","optionsContainer","optionButton","onPress","optionText","button","create","flexDirection","justifyContent","marginVertical","padding","borderWidth","borderColor","borderRadius","backgroundColor","fontSize"],"sources":["/home/luigi/Área de Trabalho/glpi-app-react/src/pages/Login/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, Image, StyleSheet, TouchableOpacity, TextInput, Alert } from \"react-native\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Animatable from 'react-native-animatable';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport utf8 from 'utf8';\nimport base64 from 'base-64';\n\nimport logo from '../assets/logo.png';\nimport gear from '../assets/gear.png';\n\nconst Login = () => {\n    const navigation = useNavigation();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [saveUser, setSaveUser] = useState(false); \n    const [selectedOption, setSelectedOption] = useState('');\n\n    const saveAcount = async () => {\n        try {\n            await AsyncStorage.setItem('Acount', selectedOption);\n        } catch (error) {\n            console.error('Conta não Armazenada', error);\n        }\n    };\n\n    const clearSavedPages = async () => {\n        try {\n            await AsyncStorage.removeItem('Computer');\n            await AsyncStorage.removeItem('Ticket');\n            await AsyncStorage.removeItem('Printer');\n            //console.log('Valores salvos limpos com sucesso.');\n        } catch (error) {\n            console.error('Erro ao limpar os valores salvos:', error);\n        }\n    };\n\n    useEffect(() => {\n        clearSavedPages();\n        const unsubscribe = navigation.addListener('beforeRemove', () => {\n            AsyncStorage.removeItem('Credenciais');\n        });\n\n        return unsubscribe;\n    }, []);\n\n    const loadStoredCredentials = async () => {\n        try {\n            const storedData = await AsyncStorage.getItem('Credenciais');\n            if (storedData) {\n                const parsedData = JSON.parse(storedData);\n                setUsername(parsedData.username || '');\n                setPassword(parsedData.password || '');\n            }\n        } catch (error) {\n            console.error(\"Erro ao carregar credenciais salvas:\", error);\n        }\n    };\n\n    const saveNewCredentials = async () => {\n        try {\n            const newCredentials = { username, password };\n            const storedUsers = await AsyncStorage.getItem('Users');\n            let usersArray = storedUsers ? JSON.parse(storedUsers) : [];\n\n            // Verifica se o usuário já existe\n            const userExists = usersArray.some(user => user.username === username);\n            if (userExists) {\n                Alert.alert('Erro', 'Usuário já existe. Tente outro nome de usuário.');\n                return;\n            }\n\n            usersArray.push(newCredentials);\n            await AsyncStorage.setItem('Users', JSON.stringify(usersArray));\n            Alert.alert('Sucesso', 'Novas credenciais salvas com sucesso!');\n        } catch (error) {\n            Alert.alert('Erro', 'Falha ao salvar novas credenciais.');\n        }\n    };\n\n    const handleLogin = async () => {\n        const texto = `${username}:${password}`;\n        const bytes = utf8.encode(texto);\n        const encoded = base64.encode(bytes);\n        //console.log('token ' + encoded);\n        await AsyncStorage.setItem('encoded', encoded);\n        if (!username || !password || !selectedOption) {\n            Alert.alert('Erro', 'Preencha todos os campos e selecione uma opção');\n            return;\n        }\n        try {\n            const res = await fetch('http://ti.ararangua.sc.gov.br:10000/glpi/apirest.php/initSession', {\n                method: \"GET\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Authorization': 'Basic ' + encoded\n                },\n            });\n            const json = await res.json();\n            //console.log(json);\n\n            if (json && json[0] === 'ERROR_GLPI_LOGIN') {\n                Alert.alert('Erro', 'Nome de usuário ou senha inválidos. Tente novamente.');\n            } else {\n                await AsyncStorage.setItem('sessionToken', JSON.stringify(json));\n                await AsyncStorage.setItem('Credenciais', JSON.stringify({ username, password }));\n                await saveAcount();\n                if (saveUser) {\n                    await AsyncStorage.setItem('user', username); \n                }\n                navigation.navigate('Serviços');\n\n                // Retornando a opção selecionada como string\n                return selectedOption;\n            }\n        } catch (error) {\n            console.error(error);\n            Alert.alert('Erro', 'Falha ao autenticar. Verifique suas credenciais e tente novamente.');\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.containerHeader}>\n                <View>\n                    <Animatable.Image\n                        animation={\"flipInY\"}\n                        source={logo} style={styles.image} />\n                </View>\n            </View>\n\n            <View>\n                <View style={styles.containerLogin}>\n                    <Text style={styles.texto}>\n                        Usuário:\n                    </Text>\n                    <TextInput\n                        placeholder=\"Login...\"\n                        style={styles.input}\n                        onChangeText={setUsername}\n                        value={username}\n                    />\n                    <Text style={styles.bar}></Text>\n                    <Text style={styles.texto}>\n                        Senha:\n                    </Text>\n                    \n                    <TextInput\n                        placeholder=\"Senha...\"\n                        style={styles.input}\n                        onChangeText={setPassword}\n                        value={password}\n                        secureTextEntry={true}\n                    />\n                    <Text style={styles.bar}></Text>\n\n                    <View style={styles.optionsContainer}>\n                        <TouchableOpacity \n                            style={[styles.optionButton, selectedOption === 'TI' && styles.selectedOption]} \n                            onPress={() => setSelectedOption('TI')}>\n                            <Text style={styles.optionText}>TI</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity \n                            style={[styles.optionButton, selectedOption === 'Banco Interno' && styles.selectedOption]} \n                            onPress={() => setSelectedOption('Banco Interno')}>\n                            <Text style={styles.optionText}>Banco Interno</Text>\n                        </TouchableOpacity>\n                    </View>\n                \n                    <TouchableOpacity style={styles.button} onPress={handleLogin}>\n                        <Text>Entrar</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={styles.button} onPress={saveNewCredentials}>\n                        <Text>Salvar Novas Credenciais</Text>\n                    </TouchableOpacity>\n                </View>\n                <View>\n                    <TouchableOpacity style={styles.gear} onPress={() => navigation.navigate('Servidores')}>\n                        <Image source={gear} style={styles.gear} />\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    containerHeader: {\n        // Adicione seus estilos\n    },\n    image: {\n        // Adicione seus estilos\n    },\n    containerLogin: {\n        // Adicione seus estilos\n    },\n    texto: {\n        // Adicione seus estilos\n    },\n    input: {\n        // Adicione seus estilos\n    },\n    bar: {\n        // Adicione seus estilos\n    },\n    button: {\n        // Adicione seus estilos\n    },\n    gear: {\n        // Adicione seus estilos\n    },\n    optionsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        marginVertical: 20,\n    },\n    optionButton: {\n        padding: 10,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n    },\n    selectedOption: {\n        backgroundColor: '#d3d3d3',\n    },\n    optionText: {\n        fontSize: 16,\n    },\n});\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}