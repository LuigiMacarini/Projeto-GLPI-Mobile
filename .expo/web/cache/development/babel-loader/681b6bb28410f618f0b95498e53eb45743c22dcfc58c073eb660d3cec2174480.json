{"ast":null,"code":"var _jsxFileName = \"/home/luigi/\\xC1rea de Trabalho/glpi-app-react/src/pages/Components/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport logo from '../assets/logo.png';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport RenderHtml from 'react-native-render-html';\nimport servers from \"./servers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  const navigation = useNavigation();\n  const [chatData, setChatData] = useState([]);\n  const [chatMessageData, setMessageData] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [headerText, setHeaderText] = useState(\"Chat\");\n  const [chatVisible, setChatVisible] = useState(true);\n  const [textServices, setTextServicesRoutes] = useState(\"\");\n  const tokenApi = async () => {\n    const storedSessionToken = await AsyncStorage.getItem('sessionToken');\n    const [, tokenPart] = storedSessionToken.replace(/[{}]/g, '').split(':');\n    return JSON.parse(tokenPart);\n  };\n  const saveId = async () => {\n    return await AsyncStorage.getItem('selectedTicketId');\n  };\n  const autoPages = async () => {\n    try {\n      const routes = await AsyncStorage.getItem('option');\n      return routes ? JSON.parse(routes) : null;\n    } catch (error) {\n      console.error('Erro ao recuperar a opção:', error);\n      return null;\n    }\n  };\n  const fetchServerUrl = async () => {\n    const url = await servers();\n    console.log(\"Server URL:\", url);\n    return url;\n  };\n  const chatScream = async () => {\n    try {\n      const storedId = await saveId();\n      const tokenObject = await tokenApi();\n      const routes = await autoPages();\n      const url = await fetchServerUrl();\n      const res = await fetch(`${url}/${routes}/${storedId}`, {\n        method: \"GET\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject\n        }\n      });\n      if (res.ok) {\n        return [await res.json()];\n      } else {\n        console.error(\"Erro em acessar a API 1\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Erro em carregar a API:\", error);\n      return [];\n    }\n  };\n  const chatMessageScream = async () => {\n    try {\n      const storedId = await saveId();\n      const tokenObject = await tokenApi();\n      const routes = await autoPages();\n      const url = await fetchServerUrl();\n      const res = await fetch(`${url}/${routes}/${storedId}/ITILFollowup/`, {\n        method: \"GET\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject\n        }\n      });\n      if (res.ok) {\n        return await res.json();\n      } else {\n        console.error(\"Erro em acessar a API 2\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Erro em carregar a API:\", error);\n      return [];\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      if (!newMessage.trim()) {\n        console.error(\"Mensagem está vazia\");\n        return;\n      }\n      const storedId = await saveId();\n      const tokenObject = await tokenApi();\n      const routes = await autoPages();\n      const url = await fetchServerUrl();\n      const response = await fetch(`${url}/ITILFollowup/`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject\n        },\n        body: JSON.stringify({\n          input: {\n            itemtype: routes,\n            items_id: storedId,\n            users_id: 9,\n            content: newMessage\n          }\n        })\n      });\n      if (response.ok) {\n        console.log(\"Mensagem enviada com sucesso\");\n        setNewMessage(\"\");\n        loadMessages();\n      } else {\n        const errorData = await response.json();\n        console.error(\"Erro ao enviar a mensagem:\", errorData);\n      }\n    } catch (error) {\n      console.error(\"Erro ao enviar a mensagem:\", error);\n    }\n  };\n  const textHeaderRoutes = async () => {\n    const routes = await autoPages();\n    switch (routes) {\n      case 'Ticket':\n        return 'Tickets';\n      case 'Computer':\n        return 'Computadores';\n      case 'Printer':\n        return 'Impressoras';\n      default:\n        return 'erro';\n    }\n  };\n  const loadMessages = async () => {\n    try {\n      const data = await chatMessageScream();\n      setMessageData(data);\n    } catch (error) {\n      console.error(\"Erro ao carregar mensagens:\", error);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      setChatData(await chatScream());\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    loadMessages();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await chatMessageScream();\n      setMessageData(data);\n      setChatVisible(data && data.length > 0);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const updateHeaderText = async () => {\n      setHeaderText(await textHeaderRoutes());\n    };\n    const updateTextServices = async () => {\n      setTextServicesRoutes(await textHeaderRoutes());\n    };\n    updateHeaderText();\n    updateTextServices();\n  }, []);\n  const renderChatHeader = () => {\n    if (chatData.length > 0) {\n      const item = chatData[0];\n      return _jsxDEV(View, {\n        style: styles.chatItem,\n        children: [_jsxDEV(Text, {\n          style: styles.headerTextChat,\n          children: [\"Chat com \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: [\"ID - \", item.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: [\"Nome: \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: [\"Problema: \", item.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: [\"Data de cria\\xE7\\xE3o: \", item.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: item.contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: item.serial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: item.otherserial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  const renderMessageItem = ({\n    item\n  }) => {\n    const isSentByCurrentUser = item.users_id === 9;\n    return _jsxDEV(View, {\n      style: [styles.chatbox, isSentByCurrentUser ? styles.receivedMessage : styles.sentMessage],\n      children: _jsxDEV(RenderHtml, {\n        contentWidth: Dimensions.get('window').width - 40,\n        source: {\n          html: item.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.logoContainer,\n      children: _jsxDEV(Animatable.Image, {\n        animation: \"flipInY\",\n        source: logo,\n        style: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Pressable, {\n        onPress: () => navigation.navigate('Serviços'),\n        children: _jsxDEV(Text, {\n          style: styles.textHeader,\n          children: \"Servi\\xE7os\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.textHeader,\n        children: \" /\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.textHeader,\n        children: textServices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), _jsxDEV(FlatList, {\n      data: chatMessageData,\n      keyExtractor: item => item.id.toString(),\n      renderItem: renderMessageItem,\n      ListHeaderComponent: chatVisible ? renderChatHeader() : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.inputContainer,\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Digite sua mensagem...\",\n        value: newMessage,\n        onChangeText: setNewMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), _jsxDEV(Pressable, {\n        onPress: sendMessage,\n        style: styles.sendButton,\n        children: _jsxDEV(Text, {\n          style: styles.text,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    marginTop: 12\n  },\n  listContent: {\n    flexGrow: 1,\n    justifyContent: 'space-between'\n  },\n  headerText: {\n    margin: '5%',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  textHeader: {\n    color: \"#fff\",\n    fontWeight: 'bold'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#fff',\n    borderTopWidth: 1,\n    borderTopColor: '#ddd',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  image: {\n    alignSelf: 'center'\n  },\n  header: {\n    marginVertical: 12,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    backgroundColor: '#498DF3'\n  },\n  headerTextChat: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  chatItem: {\n    backgroundColor: \"#DBE6FD\",\n    marginHorizontal: 12,\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    marginBottom: 10\n  },\n  sentMessage: {\n    fontSize: 14,\n    marginRight: 'auto',\n    backgroundColor: '#ADD8E6',\n    margin: 12,\n    borderRadius: 8,\n    padding: 10,\n    maxWidth: '70%',\n    alignSelf: 'flex-end'\n  },\n  receivedMessage: {\n    fontSize: 14,\n    marginLeft: 'auto',\n    margin: 12,\n    borderRadius: 8,\n    backgroundColor: '#DBE6FD',\n    padding: 10,\n    maxWidth: '70%',\n    alignSelf: 'flex-start'\n  },\n  input: {\n    backgroundColor: \"#DBE6FD\",\n    borderRadius: 8,\n    marginBottom: 10,\n    padding: 10,\n    flex: 1\n  },\n  sendButton: {\n    backgroundColor: \"#498DF3\",\n    borderRadius: 6,\n    bottom: 4,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginLeft: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: \"#fff\",\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: \"#498DF3\",\n    borderRadius: 6,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: '50%'\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginVertical: 10\n  }\n});\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","Text","StyleSheet","Pressable","View","TextInput","FlatList","Dimensions","logo","Animatable","useNavigation","AsyncStorage","RenderHtml","servers","jsxDEV","_jsxDEV","Chat","navigation","chatData","setChatData","chatMessageData","setMessageData","newMessage","setNewMessage","headerText","setHeaderText","chatVisible","setChatVisible","textServices","setTextServicesRoutes","tokenApi","storedSessionToken","getItem","tokenPart","replace","split","JSON","parse","saveId","autoPages","routes","error","console","fetchServerUrl","url","log","chatScream","storedId","tokenObject","res","fetch","method","headers","ok","json","chatMessageScream","sendMessage","trim","response","body","stringify","input","itemtype","items_id","users_id","content","loadMessages","errorData","textHeaderRoutes","data","fetchData","length","updateHeaderText","updateTextServices","renderChatHeader","item","style","styles","chatItem","children","headerTextChat","name","fileName","_jsxFileName","lineNumber","columnNumber","id","date","contact","serial","otherserial","renderMessageItem","isSentByCurrentUser","chatbox","receivedMessage","sentMessage","contentWidth","get","width","source","html","container","logoContainer","Image","animation","image","header","onPress","navigate","textHeader","keyExtractor","toString","renderItem","ListHeaderComponent","inputContainer","placeholder","value","onChangeText","sendButton","text","create","flex","backgroundColor","marginTop","listContent","flexGrow","justifyContent","margin","fontSize","fontWeight","color","flexDirection","padding","borderTopWidth","borderTopColor","alignItems","alignSelf","marginVertical","marginBottom","textAlign","marginHorizontal","borderRadius","paddingHorizontal","paddingVertical","marginRight","maxWidth","marginLeft","bottom","button"],"sources":["/home/luigi/Área de Trabalho/glpi-app-react/src/pages/Components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, StyleSheet, Pressable, View, TextInput, FlatList, Dimensions } from \"react-native\";\nimport logo from '../assets/logo.png';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport RenderHtml from 'react-native-render-html';\nimport servers from \"./servers\";\n\nconst Chat = () => {\n    const navigation = useNavigation();\n    const [chatData, setChatData] = useState([]);\n    const [chatMessageData, setMessageData] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n    const [headerText, setHeaderText] = useState(\"Chat\");\n    const [chatVisible, setChatVisible] = useState(true);\n    const [textServices, setTextServicesRoutes] = useState(\"\");\n\n    const tokenApi = async () => {\n        const storedSessionToken = await AsyncStorage.getItem('sessionToken');\n        const [, tokenPart] = storedSessionToken.replace(/[{}]/g, '').split(':');\n        return JSON.parse(tokenPart);\n    };\n\n    const saveId = async () => {\n        return await AsyncStorage.getItem('selectedTicketId');\n    };\n\n    const autoPages = async () => {\n        try {\n            const routes = await AsyncStorage.getItem('option');\n            return routes ? JSON.parse(routes) : null;\n        } catch (error) {\n            console.error('Erro ao recuperar a opção:', error);\n            return null;\n        }\n    };\n\n    const fetchServerUrl = async () => {\n        const url = await servers();\n        console.log(\"Server URL:\", url);\n        return url;\n    };\n\n    const chatScream = async () => {\n        try {\n            const storedId = await saveId();\n            const tokenObject = await tokenApi();\n            const routes = await autoPages();\n            const url = await fetchServerUrl();\n\n            const res = await fetch(`${url}/${routes}/${storedId}`, {\n                method: \"GET\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                },\n            });\n\n            if (res.ok) {\n                return [await res.json()];\n            } else {\n                console.error(\"Erro em acessar a API 1\");\n                return [];\n            }\n        } catch (error) {\n            console.error(\"Erro em carregar a API:\", error);\n            return [];\n        }\n    };\n\n    const chatMessageScream = async () => {\n        try {\n            const storedId = await saveId();\n            const tokenObject = await tokenApi();\n            const routes = await autoPages();\n            const url = await fetchServerUrl();\n            const res = await fetch(`${url}/${routes}/${storedId}/ITILFollowup/`, {\n                method: \"GET\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                },\n            });\n\n            if (res.ok) {\n                return await res.json();\n            } else {\n                console.error(\"Erro em acessar a API 2\");\n                return [];\n            }\n        } catch (error) {\n            console.error(\"Erro em carregar a API:\", error);\n            return [];\n        }\n    };\n\n    const sendMessage = async () => {\n        try {\n            if (!newMessage.trim()) {\n                console.error(\"Mensagem está vazia\");\n                return;\n            }\n\n            const storedId = await saveId();\n            const tokenObject = await tokenApi();\n            const routes = await autoPages();\n            const url = await fetchServerUrl();\n\n            const response = await fetch(`${url}/ITILFollowup/`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                },\n                body: JSON.stringify({\n                    input: {\n                        itemtype: routes,\n                        items_id: storedId,\n                        users_id: 9,\n                        content: newMessage\n                    }\n                }),\n            });\n\n            if (response.ok) {\n                console.log(\"Mensagem enviada com sucesso\");\n                setNewMessage(\"\");\n                loadMessages();\n            } else {\n                const errorData = await response.json();\n                console.error(\"Erro ao enviar a mensagem:\", errorData);\n            }\n        } catch (error) {\n            console.error(\"Erro ao enviar a mensagem:\", error);\n        }\n    };\n\n    const textHeaderRoutes = async () => {\n        const routes = await autoPages();\n        switch (routes) {\n            case 'Ticket': return 'Tickets';\n            case 'Computer': return 'Computadores';\n            case 'Printer': return 'Impressoras';\n            default: return 'erro';\n        }\n    };\n\n    const loadMessages = async () => {\n        try {\n            const data = await chatMessageScream();\n            setMessageData(data);\n            \n        } catch (error) {\n            console.error(\"Erro ao carregar mensagens:\", error);\n        }\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setChatData(await chatScream());\n        };\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        loadMessages();\n    }, []);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const data = await chatMessageScream();\n            setMessageData(data);\n            setChatVisible(data && data.length > 0);\n        };\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        const updateHeaderText = async () => {\n            setHeaderText(await textHeaderRoutes());\n        };\n        const updateTextServices = async () => {\n            setTextServicesRoutes(await textHeaderRoutes());\n        }\n        updateHeaderText();\n        updateTextServices();\n    }, []);\n\n    const renderChatHeader = () => {\n        if (chatData.length > 0) {\n            const item = chatData[0];\n            return (\n                <View style={styles.chatItem}>\n                    <Text style={styles.headerTextChat}>Chat com {item.name}</Text>\n                    <Text>ID - {item.id}</Text>\n                    <Text>Nome: {item.name}</Text>\n                    <Text>Problema: {item.content}</Text>\n                    <Text>Data de criação: {item.date}</Text>\n                    <Text>{item.contact}</Text>\n                    <Text>{item.serial}</Text>\n                    <Text>{item.otherserial}</Text>\n                   \n                </View>\n            );\n        }\n        return null;\n    };\n\n    const renderMessageItem = ({ item }) => {\n        const isSentByCurrentUser = item.users_id === 9;\n        return (\n            <View style={[styles.chatbox, isSentByCurrentUser ? styles.receivedMessage : styles.sentMessage]}>\n                <RenderHtml contentWidth={Dimensions.get('window').width - 40} source={{ html: item.content }} />\n            </View>\n        );\n    };\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.logoContainer}>\n                <Animatable.Image\n                    animation=\"flipInY\"\n                    source={logo}\n                    style={styles.image}\n                />\n            </View>\n            <View style={styles.header}>\n                <Pressable onPress={() => navigation.navigate('Serviços')}>\n                    <Text style={styles.textHeader}>Serviços</Text>\n                </Pressable>\n                <Text style={styles.textHeader}> /</Text>\n                <Text style={styles.textHeader}>{textServices}</Text>\n            </View>\n            <FlatList\n                data={chatMessageData}\n                keyExtractor={(item) => item.id.toString()}\n                renderItem={renderMessageItem}\n                ListHeaderComponent={chatVisible ? renderChatHeader() : null}\n            />\n            <View style={styles.inputContainer}>\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Digite sua mensagem...\"\n                    value={newMessage}\n                    onChangeText={setNewMessage}\n                />\n                <Pressable onPress={sendMessage} style={styles.sendButton}>\n                    <Text style={styles.text}>Enviar</Text>\n                </Pressable>\n            </View>\n        </View>\n    );\n};\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"#fff\",\n        marginTop: 12,\n    },\n    listContent: {\n        flexGrow: 1,\n        justifyContent: 'space-between',\n    },\n    headerText: {\n        margin: '5%',\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textHeader: {\n        color: \"#fff\",\n        fontWeight: 'bold',\n    },\n    inputContainer: {\n        flexDirection: 'row',\n        padding: 10,\n        backgroundColor: '#fff',\n        borderTopWidth: 1,\n        borderTopColor: '#ddd',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    image: {\n        alignSelf: 'center'\n    },\n    header: {\n        marginVertical: 12,\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        backgroundColor: '#498DF3',\n    },\n    headerTextChat: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        textAlign: 'center',\n    },\n    chatItem: {\n        backgroundColor: \"#DBE6FD\",\n        marginHorizontal: 12,\n        borderRadius: 8,\n        paddingHorizontal: 15,\n        paddingVertical: 10,\n        marginBottom: 10, \n    },\n    sentMessage: {\n        fontSize: 14,\n        marginRight: 'auto',\n        backgroundColor: '#ADD8E6',\n        margin: 12,\n        borderRadius: 8,\n        padding: 10,\n        maxWidth: '70%',\n        alignSelf: 'flex-end',\n    },\n    receivedMessage: {\n        fontSize: 14,\n        marginLeft: 'auto',\n        margin: 12,\n        borderRadius: 8,\n        backgroundColor: '#DBE6FD',\n        padding: 10,\n        maxWidth: '70%',\n        alignSelf: 'flex-start',\n    },\n    input: {\n        backgroundColor: \"#DBE6FD\",\n        borderRadius: 8,\n        marginBottom: 10,\n        padding: 10,\n        flex: 1,\n    },\n    sendButton: {\n        backgroundColor: \"#498DF3\",\n        borderRadius: 6,\n        bottom: 4,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        marginLeft: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    text: {\n        color: \"#fff\",\n        fontSize: 16,\n    },\n    button: {\n        backgroundColor: \"#498DF3\",\n        borderRadius: 6,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: '50%'\n    },\n    logoContainer: {\n        alignItems: 'center',\n        marginVertical: 10,\n    },\n});\n\nexport default Chat;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAEnD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAO,KAAKC,UAAU,MAAM,yBAAyB;AACrD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf,MAAMC,UAAU,GAAGP,aAAa,CAAC,CAAC;EAClC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,eAAe,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC6B,YAAY,EAAEC,qBAAqB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAM+B,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,kBAAkB,GAAG,MAAMpB,YAAY,CAACqB,OAAO,CAAC,cAAc,CAAC;IACrE,MAAM,GAAGC,SAAS,CAAC,GAAGF,kBAAkB,CAACG,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACxE,OAAOC,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC;EAChC,CAAC;EAED,MAAMK,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,OAAO,MAAM3B,YAAY,CAACqB,OAAO,CAAC,kBAAkB,CAAC;EACzD,CAAC;EAED,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,MAAM,GAAG,MAAM7B,YAAY,CAACqB,OAAO,CAAC,QAAQ,CAAC;MACnD,OAAOQ,MAAM,GAAGJ,IAAI,CAACC,KAAK,CAACG,MAAM,CAAC,GAAG,IAAI;IAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO,IAAI;IACf;EACJ,CAAC;EAED,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,GAAG,GAAG,MAAM/B,OAAO,CAAC,CAAC;IAC3B6B,OAAO,CAACG,GAAG,CAAC,aAAa,EAAED,GAAG,CAAC;IAC/B,OAAOA,GAAG;EACd,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMT,MAAM,CAAC,CAAC;MAC/B,MAAMU,WAAW,GAAG,MAAMlB,QAAQ,CAAC,CAAC;MACpC,MAAMU,MAAM,GAAG,MAAMD,SAAS,CAAC,CAAC;MAChC,MAAMK,GAAG,GAAG,MAAMD,cAAc,CAAC,CAAC;MAElC,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,GAAG,IAAIJ,MAAM,IAAIO,QAAQ,EAAE,EAAE;QACpDI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,WAAW,EAAE,0CAA0C;UACvD,eAAe,EAAEJ;QACrB;MACJ,CAAC,CAAC;MAEF,IAAIC,GAAG,CAACI,EAAE,EAAE;QACR,OAAO,CAAC,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC;MAC7B,CAAC,MAAM;QACHZ,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAC;QACxC,OAAO,EAAE;MACb;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO,EAAE;IACb;EACJ,CAAC;EAED,MAAMc,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMT,MAAM,CAAC,CAAC;MAC/B,MAAMU,WAAW,GAAG,MAAMlB,QAAQ,CAAC,CAAC;MACpC,MAAMU,MAAM,GAAG,MAAMD,SAAS,CAAC,CAAC;MAChC,MAAMK,GAAG,GAAG,MAAMD,cAAc,CAAC,CAAC;MAClC,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,GAAG,IAAIJ,MAAM,IAAIO,QAAQ,gBAAgB,EAAE;QAClEI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,WAAW,EAAE,0CAA0C;UACvD,eAAe,EAAEJ;QACrB;MACJ,CAAC,CAAC;MAEF,IAAIC,GAAG,CAACI,EAAE,EAAE;QACR,OAAO,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC3B,CAAC,MAAM;QACHZ,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAC;QACxC,OAAO,EAAE;MACb;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO,EAAE;IACb;EACJ,CAAC;EAED,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,IAAI,CAAClC,UAAU,CAACmC,IAAI,CAAC,CAAC,EAAE;QACpBf,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAC;QACpC;MACJ;MAEA,MAAMM,QAAQ,GAAG,MAAMT,MAAM,CAAC,CAAC;MAC/B,MAAMU,WAAW,GAAG,MAAMlB,QAAQ,CAAC,CAAC;MACpC,MAAMU,MAAM,GAAG,MAAMD,SAAS,CAAC,CAAC;MAChC,MAAMK,GAAG,GAAG,MAAMD,cAAc,CAAC,CAAC;MAElC,MAAMe,QAAQ,GAAG,MAAMR,KAAK,CAAC,GAAGN,GAAG,gBAAgB,EAAE;QACjDO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,WAAW,EAAE,0CAA0C;UACvD,eAAe,EAAEJ;QACrB,CAAC;QACDW,IAAI,EAAEvB,IAAI,CAACwB,SAAS,CAAC;UACjBC,KAAK,EAAE;YACHC,QAAQ,EAAEtB,MAAM;YAChBuB,QAAQ,EAAEhB,QAAQ;YAClBiB,QAAQ,EAAE,CAAC;YACXC,OAAO,EAAE3C;UACb;QACJ,CAAC;MACL,CAAC,CAAC;MAEF,IAAIoC,QAAQ,CAACL,EAAE,EAAE;QACbX,OAAO,CAACG,GAAG,CAAC,8BAA8B,CAAC;QAC3CtB,aAAa,CAAC,EAAE,CAAC;QACjB2C,YAAY,CAAC,CAAC;MAClB,CAAC,MAAM;QACH,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACJ,IAAI,CAAC,CAAC;QACvCZ,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAE0B,SAAS,CAAC;MAC1D;IACJ,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,MAAM2B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAM5B,MAAM,GAAG,MAAMD,SAAS,CAAC,CAAC;IAChC,QAAQC,MAAM;MACV,KAAK,QAAQ;QAAE,OAAO,SAAS;MAC/B,KAAK,UAAU;QAAE,OAAO,cAAc;MACtC,KAAK,SAAS;QAAE,OAAO,aAAa;MACpC;QAAS,OAAO,MAAM;IAC1B;EACJ,CAAC;EAED,MAAM0B,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMG,IAAI,GAAG,MAAMd,iBAAiB,CAAC,CAAC;MACtClC,cAAc,CAACgD,IAAI,CAAC;IAExB,CAAC,CAAC,OAAO5B,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;EAEDzC,SAAS,CAAC,MAAM;IACZ,MAAMsE,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BnD,WAAW,CAAC,MAAM2B,UAAU,CAAC,CAAC,CAAC;IACnC,CAAC;IACDwB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENtE,SAAS,CAAC,MAAM;IACZkE,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAENlE,SAAS,CAAC,MAAM;IACZ,MAAMsE,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMD,IAAI,GAAG,MAAMd,iBAAiB,CAAC,CAAC;MACtClC,cAAc,CAACgD,IAAI,CAAC;MACpB1C,cAAc,CAAC0C,IAAI,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC;IAC3C,CAAC;IACDD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENtE,SAAS,CAAC,MAAM;IACZ,MAAMwE,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC/C,aAAa,CAAC,MAAM2C,gBAAgB,CAAC,CAAC,CAAC;IAC3C,CAAC;IACD,MAAMK,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC5C,qBAAqB,CAAC,MAAMuC,gBAAgB,CAAC,CAAC,CAAC;IACnD,CAAC;IACDI,gBAAgB,CAAC,CAAC;IAClBC,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIxD,QAAQ,CAACqD,MAAM,GAAG,CAAC,EAAE;MACrB,MAAMI,IAAI,GAAGzD,QAAQ,CAAC,CAAC,CAAC;MACxB,OACIH,OAAA,CAACX,IAAI;QAACwE,KAAK,EAAEC,MAAM,CAACC,QAAS;QAAAC,QAAA,GACzBhE,OAAA,CAACd,IAAI;UAAC2E,KAAK,EAAEC,MAAM,CAACG,cAAe;UAAAD,QAAA,GAAC,WAAS,EAACJ,IAAI,CAACM,IAAI;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC/DtE,OAAA,CAACd,IAAI;UAAA8E,QAAA,GAAC,OAAK,EAACJ,IAAI,CAACW,EAAE;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC3BtE,OAAA,CAACd,IAAI;UAAA8E,QAAA,GAAC,QAAM,EAACJ,IAAI,CAACM,IAAI;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC9BtE,OAAA,CAACd,IAAI;UAAA8E,QAAA,GAAC,YAAU,EAACJ,IAAI,CAACV,OAAO;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACrCtE,OAAA,CAACd,IAAI;UAAA8E,QAAA,GAAC,yBAAiB,EAACJ,IAAI,CAACY,IAAI;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACzCtE,OAAA,CAACd,IAAI;UAAA8E,QAAA,EAAEJ,IAAI,CAACa;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC3BtE,OAAA,CAACd,IAAI;UAAA8E,QAAA,EAAEJ,IAAI,CAACc;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC1BtE,OAAA,CAACd,IAAI;UAAA8E,QAAA,EAAEJ,IAAI,CAACe;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE7B,CAAC;IAEf;IACA,OAAO,IAAI;EACf,CAAC;EAED,MAAMM,iBAAiB,GAAGA,CAAC;IAAEhB;EAAK,CAAC,KAAK;IACpC,MAAMiB,mBAAmB,GAAGjB,IAAI,CAACX,QAAQ,KAAK,CAAC;IAC/C,OACIjD,OAAA,CAACX,IAAI;MAACwE,KAAK,EAAE,CAACC,MAAM,CAACgB,OAAO,EAAED,mBAAmB,GAAGf,MAAM,CAACiB,eAAe,GAAGjB,MAAM,CAACkB,WAAW,CAAE;MAAAhB,QAAA,EAC7FhE,OAAA,CAACH,UAAU;QAACoF,YAAY,EAAEzF,UAAU,CAAC0F,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK,GAAG,EAAG;QAACC,MAAM,EAAE;UAAEC,IAAI,EAAEzB,IAAI,CAACV;QAAQ;MAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/F,CAAC;EAEf,CAAC;EAED,OACItE,OAAA,CAACX,IAAI;IAACwE,KAAK,EAAEC,MAAM,CAACwB,SAAU;IAAAtB,QAAA,GAC1BhE,OAAA,CAACX,IAAI;MAACwE,KAAK,EAAEC,MAAM,CAACyB,aAAc;MAAAvB,QAAA,EAC9BhE,OAAA,CAACN,UAAU,CAAC8F,KAAK;QACbC,SAAS,EAAC,SAAS;QACnBL,MAAM,EAAE3F,IAAK;QACboE,KAAK,EAAEC,MAAM,CAAC4B;MAAM;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACPtE,OAAA,CAACX,IAAI;MAACwE,KAAK,EAAEC,MAAM,CAAC6B,MAAO;MAAA3B,QAAA,GACvBhE,OAAA,CAACZ,SAAS;QAACwG,OAAO,EAAEA,CAAA,KAAM1F,UAAU,CAAC2F,QAAQ,CAAC,UAAU,CAAE;QAAA7B,QAAA,EACtDhE,OAAA,CAACd,IAAI;UAAC2E,KAAK,EAAEC,MAAM,CAACgC,UAAW;UAAA9B,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,EACZtE,OAAA,CAACd,IAAI;QAAC2E,KAAK,EAAEC,MAAM,CAACgC,UAAW;QAAA9B,QAAA,EAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACzCtE,OAAA,CAACd,IAAI;QAAC2E,KAAK,EAAEC,MAAM,CAACgC,UAAW;QAAA9B,QAAA,EAAEnD;MAAY;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,EACPtE,OAAA,CAACT,QAAQ;MACL+D,IAAI,EAAEjD,eAAgB;MACtB0F,YAAY,EAAGnC,IAAI,IAAKA,IAAI,CAACW,EAAE,CAACyB,QAAQ,CAAC,CAAE;MAC3CC,UAAU,EAAErB,iBAAkB;MAC9BsB,mBAAmB,EAAEvF,WAAW,GAAGgD,gBAAgB,CAAC,CAAC,GAAG;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,EACFtE,OAAA,CAACX,IAAI;MAACwE,KAAK,EAAEC,MAAM,CAACqC,cAAe;MAAAnC,QAAA,GAC/BhE,OAAA,CAACV,SAAS;QACNuE,KAAK,EAAEC,MAAM,CAAChB,KAAM;QACpBsD,WAAW,EAAC,wBAAwB;QACpCC,KAAK,EAAE9F,UAAW;QAClB+F,YAAY,EAAE9F;MAAc;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,EACFtE,OAAA,CAACZ,SAAS;QAACwG,OAAO,EAAEnD,WAAY;QAACoB,KAAK,EAAEC,MAAM,CAACyC,UAAW;QAAAvC,QAAA,EACtDhE,OAAA,CAACd,IAAI;UAAC2E,KAAK,EAAEC,MAAM,CAAC0C,IAAK;UAAAxC,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEf,CAAC;AACD,MAAMR,MAAM,GAAG3E,UAAU,CAACsH,MAAM,CAAC;EAC7BnB,SAAS,EAAE;IACPoB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,SAAS,EAAE;EACf,CAAC;EACDC,WAAW,EAAE;IACTC,QAAQ,EAAE,CAAC;IACXC,cAAc,EAAE;EACpB,CAAC;EACDtG,UAAU,EAAE;IACRuG,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB,CAAC;EACDpB,UAAU,EAAE;IACRqB,KAAK,EAAE,MAAM;IACbD,UAAU,EAAE;EAChB,CAAC;EACDf,cAAc,EAAE;IACZiB,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE,EAAE;IACXV,eAAe,EAAE,MAAM;IACvBW,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE,MAAM;IACtBR,cAAc,EAAE,eAAe;IAC/BS,UAAU,EAAE;EAChB,CAAC;EACD9B,KAAK,EAAE;IACH+B,SAAS,EAAE;EACf,CAAC;EACD9B,MAAM,EAAE;IACJ+B,cAAc,EAAE,EAAE;IAClBN,aAAa,EAAE,KAAK;IACpBL,cAAc,EAAE,cAAc;IAC9BS,UAAU,EAAE,QAAQ;IACpBb,eAAe,EAAE;EACrB,CAAC;EACD1C,cAAc,EAAE;IACZgD,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBS,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACf,CAAC;EACD7D,QAAQ,EAAE;IACN4C,eAAe,EAAE,SAAS;IAC1BkB,gBAAgB,EAAE,EAAE;IACpBC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBL,YAAY,EAAE;EAClB,CAAC;EACD3C,WAAW,EAAE;IACTiC,QAAQ,EAAE,EAAE;IACZgB,WAAW,EAAE,MAAM;IACnBtB,eAAe,EAAE,SAAS;IAC1BK,MAAM,EAAE,EAAE;IACVc,YAAY,EAAE,CAAC;IACfT,OAAO,EAAE,EAAE;IACXa,QAAQ,EAAE,KAAK;IACfT,SAAS,EAAE;EACf,CAAC;EACD1C,eAAe,EAAE;IACbkC,QAAQ,EAAE,EAAE;IACZkB,UAAU,EAAE,MAAM;IAClBnB,MAAM,EAAE,EAAE;IACVc,YAAY,EAAE,CAAC;IACfnB,eAAe,EAAE,SAAS;IAC1BU,OAAO,EAAE,EAAE;IACXa,QAAQ,EAAE,KAAK;IACfT,SAAS,EAAE;EACf,CAAC;EACD3E,KAAK,EAAE;IACH6D,eAAe,EAAE,SAAS;IAC1BmB,YAAY,EAAE,CAAC;IACfH,YAAY,EAAE,EAAE;IAChBN,OAAO,EAAE,EAAE;IACXX,IAAI,EAAE;EACV,CAAC;EACDH,UAAU,EAAE;IACRI,eAAe,EAAE,SAAS;IAC1BmB,YAAY,EAAE,CAAC;IACfM,MAAM,EAAE,CAAC;IACTJ,eAAe,EAAE,EAAE;IACnBD,iBAAiB,EAAE,EAAE;IACrBI,UAAU,EAAE,EAAE;IACdX,UAAU,EAAE,QAAQ;IACpBT,cAAc,EAAE;EACpB,CAAC;EACDP,IAAI,EAAE;IACFW,KAAK,EAAE,MAAM;IACbF,QAAQ,EAAE;EACd,CAAC;EACDoB,MAAM,EAAE;IACJ1B,eAAe,EAAE,SAAS;IAC1BmB,YAAY,EAAE,CAAC;IACfE,eAAe,EAAE,EAAE;IACnBD,iBAAiB,EAAE,EAAE;IACrBP,UAAU,EAAE,QAAQ;IACpBT,cAAc,EAAE,QAAQ;IACxB5B,KAAK,EAAE;EACX,CAAC;EACDI,aAAa,EAAE;IACXiC,UAAU,EAAE,QAAQ;IACpBE,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,eAAezH,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}