{"ast":null,"code":"var _jsxFileName = \"/home/luigi/\\xC1rea de Trabalho/glpi-app-react/src/pages/Components/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport logo from '../assets/logo.png';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport RenderHtml from 'react-native-render-html';\nimport servers from \"./servers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  const navigation = useNavigation();\n  const [chatData, setChatData] = useState([]);\n  const [chatMessageData, setMessageData] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [headerText, setHeaderText] = useState(\"Chat\");\n  const [, setServerUrl] = useState('');\n  const [textServices, setTextServicesRoutes] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const loadMessages = async page => {\n    if (loading) return;\n    setLoading(true);\n    try {\n      const data = await chatMessageScream(page);\n      if (page === 1) {\n        setMessageData(data);\n      } else {\n        setMessageData(prevData => [...prevData, ...data]);\n      }\n    } catch (error) {\n      console.error(\"Erro ao carregar mensagens:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const textServicesRoutes = async () => {\n    const routes = await autoPages();\n    switch (routes) {\n      case 'Ticket':\n        return 'Tickets';\n      case 'Computer':\n        return 'Computadores';\n      case 'Printer':\n        return 'Impressoras';\n      default:\n        return 'erro';\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await chatScream();\n      setChatData(data);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchServerUrl = async () => {\n      const url = await servers();\n      console.log(\"Server URL:\", url);\n      setServerUrl(url);\n    };\n    fetchServerUrl();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await chatMessageScream();\n      setMessageData(data);\n      setChatVisible(data && data.length > 0);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const updateHeaderText = async () => {\n      const text = await textHeaderRoutes();\n      setHeaderText(text);\n    };\n    const updateTextServices = async () => {\n      const textHeader = await textServicesRoutes();\n      setTextServicesRoutes(textHeader);\n    };\n    updateHeaderText();\n    updateTextServices();\n  }, []);\n  const tokenApi = async () => {\n    const storedSessionToken = await AsyncStorage.getItem('sessionToken');\n    const [, tokenPart] = storedSessionToken.replace(/[{}]/g, '').split(':');\n    const tokenObject = JSON.parse(tokenPart);\n    return tokenObject;\n  };\n  const saveId = async () => {\n    const storedId = await AsyncStorage.getItem('selectedTicketId');\n    return storedId;\n  };\n  const autoPages = async () => {\n    try {\n      const routes = await AsyncStorage.getItem('option');\n      if (routes !== null) {\n        return JSON.parse(routes);\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error('Erro ao recuperar a opção:', error);\n      return null;\n    }\n  };\n  const chatScream = async () => {\n    try {\n      const storedId = await saveId();\n      const TokenObject = await tokenApi();\n      const routes = await autoPages();\n      const url = await servers();\n      const res = await fetch(`${url}/${routes}/${storedId}`, {\n        method: \"GET\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': TokenObject\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        return [data];\n      } else {\n        console.error(\"Erro em acessar a API 1\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Erro em carregar a API:\", error);\n      return [];\n    }\n  };\n  const chatMessageScream = async (page = 1) => {\n    try {\n      const storedId = await saveId();\n      const tokenObject = await tokenApi();\n      const routes = await autoPages();\n      const url = await servers();\n      const rangeStart = (page - 1) * 25;\n      const rangeEnd = rangeStart + 10 - 1;\n      const res = await fetch(`${url}/${routes}/${storedId}/ITILFollowup/`, {\n        method: \"GET\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        return data;\n      } else {\n        console.error(\"Erro em acessar a API 2\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Erro em carregar a API:\", error);\n      return [];\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      const storedId = await saveId();\n      const tokenObject = await tokenApi();\n      const routes = await autoPages();\n      const url = await servers();\n      const formattedMessage = `${newMessage}`;\n      const response = await fetch(`${url}/ITILFollowup/`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject\n        },\n        body: JSON.stringify({\n          input: {\n            itemtype: routes,\n            items_id: storedId,\n            users_id: 9,\n            content: formattedMessage\n          }\n        })\n      });\n      if (!newMessage.trim()) {\n        console.error(\"Mensagem está vazia\");\n        return;\n      }\n      if (response.ok) {\n        console.log(\"Mensagem enviada com sucesso\");\n        setNewMessage(\"\");\n        setPage(1);\n        loadMessages(1);\n        const data = await chatMessageScream();\n        setMessageData(data);\n      } else {\n        const errorData = await response.json();\n        console.error(\"Erro ao enviar a mensagem:\", errorData);\n      }\n    } catch (error) {\n      console.error(\"Erro ao enviar a mensagem:\", error);\n    }\n  };\n  const textHeaderRoutes = async () => {\n    const routes = await autoPages();\n    switch (routes) {\n      case 'Ticket':\n        return 'Tickets';\n      case 'Computer':\n        return 'Computadores';\n      case 'Printer':\n        return 'Impressoras';\n      default:\n        return 'erro';\n    }\n  };\n  const renderChatHeader = () => {\n    if (chatData.length > 0) {\n      const item = chatData[0];\n      return _jsxDEV(View, {\n        delay: 400,\n        animation: \"fadeInUp\",\n        style: styles.chatItem,\n        children: [_jsxDEV(Text, {\n          style: styles.headerTextChat,\n          children: [\"Chat com \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: [\"(\", item.id, \") - \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  const renderMessageItem = ({\n    item\n  }) => {\n    const isSentByCurrentUser = item.users_id === 9;\n    return _jsxDEV(View, {\n      delay: 400,\n      animation: \"fadeInUp\",\n      style: [styles.chatbox, isSentByCurrentUser ? styles.receivedMessage : styles.sentMessage],\n      children: _jsxDEV(RenderHtml, {\n        contentWidth: Dimensions.get('window').width - 40,\n        source: {\n          html: item.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this);\n  };\n  const handleLoadMore = () => {\n    if (!loading) {\n      setPage(prevPage => prevPage + 1);\n      loadMessages(page + 1);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.logoContainer,\n      children: _jsxDEV(Animatable.Image, {\n        animation: \"flipInY\",\n        source: require('../assets/logo.png'),\n        style: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      delay: 400,\n      animation: \"fadeInUp\",\n      style: styles.header,\n      children: [_jsxDEV(Pressable, {\n        onPress: () => navigation.navigate('Serviços'),\n        children: _jsxDEV(Text, {\n          style: styles.textHeader,\n          children: \"Servi\\xE7os\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.textHeader,\n        children: \" /\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.textHeader,\n        children: textServices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this), _jsxDEV(FlatList, {\n      ListHeaderComponent: renderChatHeader,\n      data: chatMessageData,\n      keyExtractor: item => item.id.toString(),\n      renderItem: renderMessageItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.inputContainer,\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Digite sua mensagem...\",\n        value: newMessage,\n        onChangeText: setNewMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), _jsxDEV(Pressable, {\n        onPress: sendMessage,\n        style: styles.sendButton,\n        children: _jsxDEV(Text, {\n          style: styles.text,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    marginTop: 12\n  },\n  listContent: {\n    flexGrow: 1,\n    justifyContent: 'space-between'\n  },\n  headerText: {\n    margin: '5%',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  textHeader: {\n    color: \"#fff\",\n    fontWeight: 'bold'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#fff',\n    borderTopWidth: 1,\n    borderTopColor: '#ddd',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  image: {\n    alignSelf: 'center'\n  },\n  header: {\n    marginVertical: 12,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    borderRadius: 4,\n    backgroundColor: '#498DF3'\n  },\n  headerTextChat: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  chatItem: {\n    backgroundColor: \"#DBE6FD\",\n    marginHorizontal: 12,\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    marginBottom: 10\n  },\n  sentMessage: {\n    fontSize: 14,\n    marginRight: 'auto',\n    backgroundColor: '#ADD8E6',\n    margin: 12,\n    borderRadius: 8,\n    padding: 10,\n    maxWidth: '70%',\n    alignSelf: 'flex-end'\n  },\n  receivedMessage: {\n    fontSize: 14,\n    marginLeft: 'auto',\n    margin: 12,\n    borderRadius: 8,\n    backgroundColor: '#DBE6FD',\n    padding: 10,\n    maxWidth: '70%',\n    alignSelf: 'flex-start'\n  },\n  input: {\n    backgroundColor: \"#DBE6FD\",\n    borderRadius: 8,\n    marginBottom: 10,\n    padding: 10,\n    flex: 1\n  },\n  sendButton: {\n    backgroundColor: \"#498DF3\",\n    borderRadius: 6,\n    bottom: 4,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginLeft: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: \"#fff\",\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: \"#498DF3\",\n    borderRadius: 6,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: '50%'\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginVertical: 10\n  }\n});\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","Text","StyleSheet","Pressable","View","TextInput","FlatList","Dimensions","logo","Animatable","useNavigation","AsyncStorage","RenderHtml","servers","jsxDEV","_jsxDEV","Chat","navigation","chatData","setChatData","chatMessageData","setMessageData","newMessage","setNewMessage","headerText","setHeaderText","setServerUrl","textServices","setTextServicesRoutes","page","setPage","loading","setLoading","loadMessages","data","chatMessageScream","prevData","error","console","textServicesRoutes","routes","autoPages","fetchData","chatScream","fetchServerUrl","url","log","setChatVisible","length","updateHeaderText","text","textHeaderRoutes","updateTextServices","textHeader","tokenApi","storedSessionToken","getItem","tokenPart","replace","split","tokenObject","JSON","parse","saveId","storedId","TokenObject","res","fetch","method","headers","ok","json","rangeStart","rangeEnd","sendMessage","formattedMessage","response","body","stringify","input","itemtype","items_id","users_id","content","trim","errorData","renderChatHeader","item","delay","animation","style","styles","chatItem","children","headerTextChat","name","fileName","_jsxFileName","lineNumber","columnNumber","id","renderMessageItem","isSentByCurrentUser","chatbox","receivedMessage","sentMessage","contentWidth","get","width","source","html","handleLoadMore","prevPage","container","logoContainer","Image","require","image","header","onPress","navigate","ListHeaderComponent","keyExtractor","toString","renderItem","inputContainer","placeholder","value","onChangeText","sendButton","create","flex","backgroundColor","marginTop","listContent","flexGrow","justifyContent","margin","fontSize","fontWeight","color","flexDirection","padding","borderTopWidth","borderTopColor","alignItems","alignSelf","marginVertical","borderRadius","marginBottom","textAlign","marginHorizontal","paddingHorizontal","paddingVertical","marginRight","maxWidth","marginLeft","bottom","button"],"sources":["/home/luigi/Área de Trabalho/glpi-app-react/src/pages/Components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, StyleSheet, Pressable, View, TextInput, FlatList, Dimensions } from \"react-native\";\nimport logo from '../assets/logo.png';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport RenderHtml from 'react-native-render-html';\nimport servers from \"./servers\";\n\nconst Chat = () => {\n    const navigation = useNavigation();\n    const [chatData, setChatData] = useState([]);\n    const [chatMessageData, setMessageData] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n    const [headerText, setHeaderText] = useState(\"Chat\");\n    //const [chatVisible, setChatVisible] = useState(true);\n    //const [userVisible, setUserVisible] = useState(true);\n    const [, setServerUrl] = useState('');\n    const [textServices, setTextServicesRoutes] = useState(\"\");\n    const [page, setPage] = useState(1);\n    const [loading, setLoading] = useState(false);\n\n    const loadMessages = async (page) => {\n        if (loading) return;\n        setLoading(true);\n\n        try {\n            const data = await chatMessageScream(page);\n            if (page === 1) {\n                setMessageData(data);\n            } else {\n                setMessageData(prevData => [...prevData, ...data]);\n            }\n        } catch (error) {\n            console.error(\"Erro ao carregar mensagens:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n    const textServicesRoutes = async () => {\n        const routes = await autoPages();\n        switch (routes) {\n            case 'Ticket': return 'Tickets';\n            case 'Computer': return 'Computadores';\n            case 'Printer': return 'Impressoras';\n            default: return 'erro';\n        }\n    };\n    useEffect(() => {\n        const fetchData = async () => {\n            const data = await chatScream();\n            setChatData(data);\n        }; fetchData();\n    }, []);\n\n    useEffect(() => {\n        const fetchServerUrl = async () => {\n            const url = await servers();\n            console.log(\"Server URL:\", url);\n            setServerUrl(url);\n        };\n        fetchServerUrl();\n    }, []);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const data = await chatMessageScream();\n            setMessageData(data);\n            setChatVisible(data && data.length > 0);\n        }; fetchData();\n    }, []);\n\n    useEffect(() => {\n        const updateHeaderText = async () => {\n            const text = await textHeaderRoutes();\n            setHeaderText(text);\n        };\n        const updateTextServices = async () => {\n            const textHeader = await textServicesRoutes();\n            setTextServicesRoutes(textHeader);\n        }\n        updateHeaderText();\n        updateTextServices();\n    }, []);\n\n    const tokenApi = async () => { //var do token \n        const storedSessionToken = await AsyncStorage.getItem('sessionToken');\n        const [, tokenPart] = storedSessionToken.replace(/[{}]/g, '').split(':');\n        const tokenObject = JSON.parse(tokenPart); return tokenObject;\n    };\n\n    const saveId = async () => { //pega o ID do item clicado e joga pra API\n        const storedId = await AsyncStorage.getItem('selectedTicketId'); return storedId;\n    };\n\n    const autoPages = async () => { //pega o serviço que o user selecionou e joga pra API\n        try {\n            const routes = await AsyncStorage.getItem('option');\n            if (routes !== null) {\n                return JSON.parse(routes);\n            } else {\n                return null;\n            }\n        } catch (error) {\n            console.error('Erro ao recuperar a opção:', error); return null;\n        }\n    };\n\n    const chatScream = async () => {\n        try {\n            const storedId = await saveId();\n            const TokenObject = await tokenApi();\n            const routes = await autoPages();\n            const url = await servers();\n\n            const res = await fetch(`${url}/${routes}/${storedId}`, {\n                method: \"GET\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': TokenObject,\n                },\n            });\n\n            if (res.ok) {\n                const data = await res.json(); return [data];\n            } else {\n                console.error(\"Erro em acessar a API 1\"); return [];\n            }\n        } catch (error) {\n            console.error(\"Erro em carregar a API:\", error); return [];\n        }\n    };\n\n\n    const chatMessageScream = async (page = 1) => {\n        try {\n            const storedId = await saveId();\n            const tokenObject = await tokenApi();\n            const routes = await autoPages();\n            const url = await servers();\n            const rangeStart = (page - 1) * 25; \n            const rangeEnd = rangeStart + 10 - 1;\n            const res = await fetch(`${url}/${routes}/${storedId}/ITILFollowup/`, {\n                method: \"GET\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                },\n            });\n\n            if (res.ok) {\n                const data = await res.json();\n                return data;\n            } else {\n                console.error(\"Erro em acessar a API 2\");\n                return [];\n            }\n        } catch (error) {\n            console.error(\"Erro em carregar a API:\", error);\n            return [];\n        }\n    };\n\n\n    const sendMessage = async () => {\n        try {\n            const storedId = await saveId();\n            const tokenObject = await tokenApi();\n            const routes = await autoPages();\n            const url = await servers();\n\n            const formattedMessage = `${newMessage}`;\n            const response = await fetch(`${url}/ITILFollowup/`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                },\n                body: JSON.stringify({\n                    input: {\n                        itemtype: routes, //manda pra rota do chamado - Ticket - Computer - Printer \n                        items_id: storedId, //abre o id do chamado\n                        users_id: 9, //usar uma var para o mudar o user \n                        content: formattedMessage //mensagem do user\n                    }\n                }),\n            });\n            if (!newMessage.trim()) {\n                console.error(\"Mensagem está vazia\");\n\n                return;\n            }\n            if (response.ok) {\n                console.log(\"Mensagem enviada com sucesso\");\n                setNewMessage(\"\");\n                setPage(1);\n                loadMessages(1)\n                const data = await chatMessageScream();\n                setMessageData(data);\n            } else {\n                const errorData = await response.json();\n                console.error(\"Erro ao enviar a mensagem:\", errorData);\n            }\n        } catch (error) {\n            console.error(\"Erro ao enviar a mensagem:\", error);\n        }\n    };\n\n    const textHeaderRoutes = async () => {\n        const routes = await autoPages();\n        switch (routes) {\n            case 'Ticket': return 'Tickets';\n            case 'Computer': return 'Computadores';\n            case 'Printer': return 'Impressoras';\n            default: return 'erro';\n        }\n    };\n\n    const renderChatHeader = () => {\n        if (chatData.length > 0) {\n            const item = chatData[0];\n            return (\n                <View\n                    delay={400} animation={\"fadeInUp\"} style={styles.chatItem}>\n                    <Text style={styles.headerTextChat}>Chat com {item.name}</Text>\n                    <Text>({item.id}) - {item.name}</Text>\n                    <Text>{item.content}</Text>\n                </View>\n            );\n        }\n        return null;\n    };\n\n    const renderMessageItem = ({ item }) => {\n        const isSentByCurrentUser = item.users_id === 9; // `${userID}` trocar ID User\n\n        return (\n            <View\n                delay={400} animation={\"fadeInUp\"}\n                style={[styles.chatbox, isSentByCurrentUser ? styles.receivedMessage : styles.sentMessage]}>\n\n                <RenderHtml contentWidth={Dimensions.get('window').width - 40} source={{ html: item.content }} />\n            </View >\n        );\n    };\n    const handleLoadMore = () => {\n        if (!loading) {\n            setPage(prevPage => prevPage + 1);\n            loadMessages(page + 1);\n        }\n    };\n    return (\n        <View style={styles.container}>\n\n            <View style={styles.logoContainer}>\n                <Animatable.Image\n                    animation={\"flipInY\"}\n                    source={require('../assets/logo.png')}\n                    style={styles.image}\n                />\n            </View>\n            <View delay={400} animation={\"fadeInUp\"} style={styles.header}>\n                <Pressable onPress={() => navigation.navigate('Serviços')}>\n                    <Text style={styles.textHeader}>Serviços</Text>\n                </Pressable>\n                <Text style={styles.textHeader}> /</Text>\n                <Text style={styles.textHeader}>{textServices}</Text>\n            </View>\n            <FlatList\n                ListHeaderComponent={renderChatHeader}\n                data={chatMessageData}\n                keyExtractor={(item) => item.id.toString()}\n                renderItem={renderMessageItem}\n            />\n            <View style={styles.inputContainer}>\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Digite sua mensagem...\"\n                    value={newMessage}\n                    onChangeText={setNewMessage}\n                />\n                <Pressable onPress={sendMessage} style={styles.sendButton}>\n                    <Text style={styles.text}>Enviar</Text>\n                </Pressable>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"#fff\",\n        marginTop: 12,\n    },\n    listContent: {\n        flexGrow: 1,\n        justifyContent: 'space-between',\n    },\n    headerText: {\n        margin: '5%',\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textHeader: {\n        color: \"#fff\",\n        fontWeight: 'bold',\n    },\n    inputContainer: {\n        flexDirection: 'row',\n        padding: 10,\n        backgroundColor: '#fff',\n        borderTopWidth: 1,\n        borderTopColor: '#ddd',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    image: {\n        alignSelf: 'center'\n    },\n    header: {\n        marginVertical: 12,\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        borderRadius: 4,\n        backgroundColor: '#498DF3',\n    },\n    headerTextChat: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        textAlign: 'center',\n    },\n    chatItem: {\n        backgroundColor: \"#DBE6FD\",\n        marginHorizontal: 12,\n        borderRadius: 8,\n        paddingHorizontal: 15,\n        paddingVertical: 10,\n        marginBottom: 10, \n    },\n    sentMessage: {\n        fontSize: 14,\n        marginRight: 'auto',\n        backgroundColor: '#ADD8E6',\n        margin: 12,\n        borderRadius: 8,\n        padding: 10,\n        maxWidth: '70%',\n        alignSelf: 'flex-end',\n    },\n    receivedMessage: {\n        fontSize: 14,\n        marginLeft: 'auto',\n        margin: 12,\n        borderRadius: 8,\n        backgroundColor: '#DBE6FD',\n        padding: 10,\n        maxWidth: '70%',\n        alignSelf: 'flex-start',\n    },\n    input: {\n        backgroundColor: \"#DBE6FD\",\n        borderRadius: 8,\n        marginBottom: 10,\n        padding: 10,\n        flex: 1,\n    },\n    sendButton: {\n        backgroundColor: \"#498DF3\",\n        borderRadius: 6,\n        bottom: 4,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        marginLeft: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    text: {\n        color: \"#fff\",\n        fontSize: 16,\n    },\n    button: {\n        backgroundColor: \"#498DF3\",\n        borderRadius: 6,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: '50%'\n    },\n    logoContainer: {\n        alignItems: 'center',\n        marginVertical: 10,\n    },\n});\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}