{"ast":null,"code":"var _jsxFileName = \"/home/luigi/\\xC1rea de Trabalho/glpi-app-react/src/pages/Servi\\xE7os/Tickets.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport logo from '../assets/logo.png';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport TicketCrud from \"../Components/addTickets\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTicket = () => {\n  const navigation = useNavigation();\n  const [headerText, setHeaderText] = useState(\"\");\n  const [textServices, setTextServicesRoutes] = useState(\"\");\n  const textHeaderRoutes = async () => {\n    const routes = await autoPagess();\n    switch (routes) {\n      case 'Ticket':\n        return 'Tickets';\n      case 'Computer':\n        return 'Ativos -> Computadores';\n      case 'Printer':\n        return 'Ativos -> Impressoras';\n      default:\n        return 'vazio';\n    }\n  };\n  const textServicesRoutes = async () => {\n    const routes = await autoPages();\n    switch (routes) {\n      case 'Ticket':\n        return 'Tickets';\n      case 'Computer':\n        return 'Computadores';\n      case 'Printer':\n        return 'Impressoras';\n      default:\n        return 'erro';\n    }\n  };\n  useEffect(() => {\n    const updateHeaderText = async () => {\n      const text = await textHeaderRoutes();\n      setHeaderText(text);\n    };\n    const updateTextServices = async () => {\n      const textHeader = await textServicesRoutes();\n      setTextServicesRoutes(textHeader);\n    };\n    updateHeaderText();\n    updateTextServices();\n  }, []);\n  const autoPages = async () => {\n    try {\n      const routes = await AsyncStorage.getItem('option');\n      if (routes !== null) {\n        return JSON.parse(routes);\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error('Erro em pegar a pagina:', error);\n      return null;\n    }\n  };\n  autoPages().then(routes => {}).catch(error => {\n    console.error('Erro:', error);\n  });\n  return _jsxDEV(ScrollView, {\n    children: [_jsxDEV(Animatable.View, {\n      style: style.container,\n      children: _jsxDEV(Animatable.Image, {\n        animation: \"flipInY\",\n        source: logo,\n        style: style.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), _jsxDEV(Animatable.View, {\n      delay: 400,\n      animation: \"fadeInUp\",\n      style: style.header,\n      children: [_jsxDEV(Pressable, {\n        onPress: () => navigation.navigate('Serviços'),\n        children: _jsxDEV(Text, {\n          style: style.textHeader,\n          children: \"Servi\\xE7os\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: style.textHeader,\n        children: \" /\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: style.textHeader,\n        children: textServices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), _jsxDEV(Animatable.View, {\n      delay: 400,\n      animation: \"fadeInUp\",\n      style: style.container,\n      children: [_jsxDEV(Text, {\n        style: style.headerText,\n        children: headerText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), _jsxDEV(TicketCrud, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), _jsxDEV(Pressable, {\n        onPress: () => navigation.navigate('Serviços'),\n        style: style.button,\n        children: _jsxDEV(Text, {\n          style: style.text,\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\nconst style = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\"\n  },\n  image: {\n    margin: 8,\n    alignSelf: 'center'\n  },\n  textHeader: {\n    color: \"#fff\"\n  },\n  header: {\n    backgroundColor: \"#498DF3\",\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  },\n  headerText: {\n    margin: '5%',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  text: {\n    alignSelf: \"center\",\n    color: \"#fff\",\n    fontSize: 20\n  },\n  button: {\n    backgroundColor: \"#498DF3\",\n    borderRadius: 6,\n    width: \"35%\",\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowColor: \"#000\",\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n    elevation: 4,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    margin: 16,\n    bottom: 16\n  }\n});\nexport default AddTicket;","map":{"version":3,"names":["React","useState","useEffect","Text","StyleSheet","Pressable","ScrollView","logo","Animatable","useNavigation","TicketCrud","AsyncStorage","jsxDEV","_jsxDEV","AddTicket","navigation","headerText","setHeaderText","textServices","setTextServicesRoutes","textHeaderRoutes","routes","autoPagess","textServicesRoutes","autoPages","updateHeaderText","text","updateTextServices","textHeader","getItem","JSON","parse","error","console","then","catch","children","View","style","container","Image","animation","source","image","fileName","_jsxFileName","lineNumber","columnNumber","delay","header","onPress","navigate","button","create","backgroundColor","margin","alignSelf","color","flexDirection","justifyContent","fontSize","fontWeight","borderRadius","width","alignItems","shadowColor","shadowOpacity","shadowRadius","elevation","shadowOffset","height","bottom"],"sources":["/home/luigi/Área de Trabalho/glpi-app-react/src/pages/Serviços/Tickets.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, StyleSheet, Pressable, ScrollView } from \"react-native\";\nimport logo from '../assets/logo.png';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport TicketCrud from \"../Components/addTickets\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst AddTicket = () => {\n    const navigation = useNavigation();\n    const [headerText, setHeaderText] = useState(\"\");\n    const [textServices, setTextServicesRoutes] = useState(\"\");\n\n\n    const textHeaderRoutes = async () => {\n        const routes = await autoPagess();\n        switch (routes) {\n            case 'Ticket': return 'Tickets';\n            case 'Computer': return 'Ativos -> Computadores';\n            case 'Printer': return 'Ativos -> Impressoras';\n            default: return 'vazio';\n        }\n    };\n    const textServicesRoutes = async () => {\n        const routes = await autoPages();\n        switch (routes) {\n            case 'Ticket': return 'Tickets';\n            case 'Computer': return 'Computadores';\n            case 'Printer': return 'Impressoras';\n            default: return 'erro';\n        }\n      };\n    \n    useEffect(() => {\n        const updateHeaderText = async () => {\n            const text = await textHeaderRoutes();\n            setHeaderText(text);\n        };\n        const updateTextServices = async()=>{\n            const textHeader = await textServicesRoutes();\n            setTextServicesRoutes(textHeader);\n        }\n        updateHeaderText();\n        updateTextServices();\n    }, []);\n\n    const autoPages = async () => {\n        try {\n            const routes = await AsyncStorage.getItem('option');\n            if (routes !== null) {\n                return JSON.parse(routes);\n            } else {\n                return null;\n            }\n            \n        } catch (error) {\n            console.error('Erro em pegar a pagina:', error);\n            return null;\n        }\n    }\n    autoPages().then(routes => {\n    }).catch(error => {\n      console.error('Erro:', error);\n    });\n\n    return (\n        \n        <ScrollView>\n            <Animatable.View style={style.container}>\n                <Animatable.Image\n                    animation={\"flipInY\"}\n                    source={logo} style={style.image} />\n            </Animatable.View>\n\n            <Animatable.View delay={400} animation={\"fadeInUp\"} style={style.header}>\n                <Pressable\n                onPress={()=> navigation.navigate('Serviços')}>\n        \n                <Text style={style.textHeader}>Serviços</Text>\n                </Pressable>\n                <Text style={style.textHeader}> /</Text>\n                <Text style={style.textHeader}>{textServices}</Text>\n            </Animatable.View>\n\n            <Animatable.View delay={400} animation={\"fadeInUp\"} style={style.container} >\n                <Text style={style.headerText}>{headerText}</Text>\n                <TicketCrud></TicketCrud>\n                <Pressable\n                    onPress={() => navigation.navigate('Serviços')}\n                    style={style.button}>\n                    \n                    <Text style={style.text}>Voltar</Text>\n                </Pressable>\n            </Animatable.View>\n            </ScrollView>\n    );\n};\n\nconst style = StyleSheet.create({\n    container: {\n        backgroundColor: \"#fff\",\n    },\n    image: {\n        margin: 8,\n        alignSelf: 'center'\n    },\n    textHeader: {\n        color: \"#fff\",\n    },\n    header: {\n        backgroundColor: \"#498DF3\",\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n    },\n    headerText: {\n        margin: '5%',\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    text: {\n        alignSelf: \"center\",\n        color: \"#fff\",\n        fontSize: 20,\n    },\n    button: {\n        backgroundColor: \"#498DF3\",\n        borderRadius: 6,\n        width: \"35%\",\n        alignSelf: \"center\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        shadowColor: \"#000\",\n        shadowOpacity: 0.23,\n        shadowRadius: 2.62,\n        elevation: 4,\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        margin: 16,\n        bottom: 16\n\n    },\n});\n\nexport default AddTicket;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}