{"ast":null,"code":"var _jsxFileName = \"/home/luigi/\\xC1rea de Trabalho/glpi-app-react/src/pages/Components/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport RenderHtml from 'react-native-render-html';\nimport servers from \"./servers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  const navigation = useNavigation();\n  const [chatData, setChatData] = useState([]);\n  const [chatMessageData, setMessageData] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [headerText, setHeaderText] = useState(\"Chat\");\n  const [chatVisible, setChatVisible] = useState(true);\n  const [textServices, setTextServicesRoutes] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const fetchServerUrl = async () => {\n    const url = await servers();\n    console.log(\"Server URL:\", url);\n    return url;\n  };\n  const fetchId = async () => await AsyncStorage.getItem('selectedTicketId');\n  const fetchToken = async () => {\n    const storedSessionToken = await AsyncStorage.getItem('sessionToken');\n    const [, tokenPart] = storedSessionToken.replace(/[{}]/g, '').split(':');\n    return JSON.parse(tokenPart);\n  };\n  const fetchServiceOption = async () => {\n    try {\n      const routes = await AsyncStorage.getItem('option');\n      return routes ? JSON.parse(routes) : null;\n    } catch (error) {\n      console.error('Erro ao recuperar a opção:', error);\n      return null;\n    }\n  };\n  const fetchChatData = async () => {\n    try {\n      const storedId = await fetchId();\n      const tokenObject = await fetchToken();\n      const routes = await fetchServiceOption();\n      const url = await fetchServerUrl();\n      const res = await fetch(`${url}/${routes}/${storedId}`, {\n        method: \"GET\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        return [data];\n      } else {\n        console.error(\"Erro em acessar a API 1\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Erro em carregar a API:\", error);\n      return [];\n    }\n  };\n  const fetchMessages = async (page = 1) => {\n    try {\n      const storedId = await fetchId();\n      const tokenObject = await fetchToken();\n      const routes = await fetchServiceOption();\n      const url = await fetchServerUrl();\n      const res = await fetch(`${url}/${routes}/${storedId}/ITILFollowup/`, {\n        method: \"GET\",\n        headers: {\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject\n        }\n      });\n      if (res.ok) {\n        return await res.json();\n      } else {\n        console.error(\"Erro em acessar a API 2\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Erro em carregar a API:\", error);\n      return [];\n    }\n  };\n  const loadMessages = async page => {\n    if (loading) return;\n    setLoading(true);\n    try {\n      const data = await fetchMessages(page);\n      setMessageData(prevData => page === 1 ? data : [...prevData, ...data]);\n    } catch (error) {\n      console.error(\"Erro ao carregar mensagens:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      if (!newMessage.trim()) {\n        console.error(\"Mensagem está vazia\");\n        return;\n      }\n      const storedId = await fetchId();\n      const tokenObject = await fetchToken();\n      const routes = await fetchServiceOption();\n      const url = await fetchServerUrl();\n      const response = await fetch(`${url}/ITILFollowup/`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n          'Session-Token': tokenObject\n        },\n        body: JSON.stringify({\n          input: {\n            itemtype: routes,\n            items_id: storedId,\n            users_id: 9,\n            content: newMessage\n          }\n        })\n      });\n      if (response.ok) {\n        console.log(\"Mensagem enviada com sucesso\");\n        setNewMessage(\"\");\n        setPage(1);\n        loadMessages(1);\n      } else {\n        const errorData = await response.json();\n        console.error(\"Erro ao enviar a mensagem:\", errorData);\n      }\n    } catch (error) {\n      console.error(\"Erro ao enviar a mensagem:\", error);\n    }\n  };\n  const renderChatHeader = () => {\n    if (chatData.length > 0) {\n      const item = chatData[0];\n      return _jsxDEV(View, {\n        delay: 400,\n        animation: \"fadeInUp\",\n        style: styles.chatItem,\n        children: [_jsxDEV(Text, {\n          style: styles.headerTextChat,\n          children: [\"Chat com \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: [\"(\", item.id, \") - \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: item.contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: item.serial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), _jsxDEV(Text, {\n          children: item.otherserial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  const renderMessageItem = ({\n    item\n  }) => {\n    const isSentByCurrentUser = item.users_id === 9;\n    return _jsxDEV(View, {\n      delay: 400,\n      animation: \"fadeInUp\",\n      style: [styles.chatbox, isSentByCurrentUser ? styles.sentMessage : styles.receivedMessage],\n      children: _jsxDEV(RenderHtml, {\n        contentWidth: Dimensions.get('window').width - 40,\n        source: {\n          html: item.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetchChatData();\n      setChatData(data);\n    };\n    const fetchHeaderText = async () => {\n      const routes = await fetchServiceOption();\n      const text = routes === 'Ticket' ? 'Tickets' : routes === 'Computer' ? 'Computadores' : routes === 'Printer' ? 'Impressoras' : 'erro';\n      setHeaderText(text);\n      setTextServicesRoutes(text);\n    };\n    fetchData();\n    fetchHeaderText();\n    loadMessages(page);\n  }, [page]);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.logoContainer,\n      children: _jsxDEV(Animatable.Image, {\n        animation: \"flipInY\",\n        source: require('../assets/logo.png'),\n        style: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      delay: 400,\n      animation: \"fadeInUp\",\n      style: styles.header,\n      children: [_jsxDEV(Pressable, {\n        onPress: () => navigation.navigate('Serviços'),\n        children: _jsxDEV(Text, {\n          style: styles.textHeader,\n          children: \"Servi\\xE7os\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.textHeader,\n        children: \" / \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.textHeader,\n        children: textServices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), _jsxDEV(FlatList, {\n      ListHeaderComponent: renderChatHeader,\n      data: chatMessageData,\n      keyExtractor: item => item.id.toString(),\n      renderItem: renderMessageItem,\n      onEndReached: handleLoadMore,\n      onEndReachedThreshold: 0.1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.inputContainer,\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Digite sua mensagem...\",\n        value: newMessage,\n        onChangeText: setNewMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), _jsxDEV(Pressable, {\n        onPress: sendMessage,\n        style: styles.sendButton,\n        children: _jsxDEV(Text, {\n          style: styles.text,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    marginTop: 12\n  },\n  listContent: {\n    flexGrow: 1,\n    justifyContent: 'space-between'\n  },\n  headerText: {\n    margin: '5%',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  textHeader: {\n    color: \"#fff\",\n    fontWeight: 'bold'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#fff',\n    borderTopWidth: 1,\n    borderTopColor: '#ddd',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  image: {\n    alignSelf: 'center'\n  },\n  header: {\n    marginVertical: 12,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    backgroundColor: '#498DF3'\n  },\n  headerTextChat: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  chatItem: {\n    backgroundColor: \"#DBE6FD\",\n    marginHorizontal: 12,\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    marginBottom: 10\n  },\n  sentMessage: {\n    fontSize: 14,\n    marginRight: 'auto',\n    backgroundColor: '#ADD8E6',\n    margin: 12,\n    borderRadius: 8,\n    padding: 10,\n    maxWidth: '70%',\n    alignSelf: 'flex-end'\n  },\n  receivedMessage: {\n    fontSize: 14,\n    marginLeft: 'auto',\n    margin: 12,\n    borderRadius: 8,\n    backgroundColor: '#DBE6FD',\n    padding: 10,\n    maxWidth: '70%',\n    alignSelf: 'flex-start'\n  },\n  input: {\n    backgroundColor: \"#DBE6FD\",\n    borderRadius: 8,\n    marginBottom: 10,\n    padding: 10,\n    flex: 1\n  },\n  sendButton: {\n    backgroundColor: \"#498DF3\",\n    borderRadius: 6,\n    bottom: 4,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginLeft: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: \"#fff\",\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: \"#498DF3\",\n    borderRadius: 6,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: '50%'\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginVertical: 10\n  }\n});\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","Text","StyleSheet","Pressable","View","TextInput","FlatList","Dimensions","Animatable","useNavigation","AsyncStorage","RenderHtml","servers","jsxDEV","_jsxDEV","Chat","navigation","chatData","setChatData","chatMessageData","setMessageData","newMessage","setNewMessage","headerText","setHeaderText","chatVisible","setChatVisible","textServices","setTextServicesRoutes","page","setPage","loading","setLoading","fetchServerUrl","url","console","log","fetchId","getItem","fetchToken","storedSessionToken","tokenPart","replace","split","JSON","parse","fetchServiceOption","routes","error","fetchChatData","storedId","tokenObject","res","fetch","method","headers","ok","data","json","fetchMessages","loadMessages","prevData","sendMessage","trim","response","body","stringify","input","itemtype","items_id","users_id","content","errorData","renderChatHeader","length","item","delay","animation","style","styles","chatItem","children","headerTextChat","name","fileName","_jsxFileName","lineNumber","columnNumber","id","contact","serial","otherserial","renderMessageItem","isSentByCurrentUser","chatbox","sentMessage","receivedMessage","contentWidth","get","width","source","html","fetchData","fetchHeaderText","text","container","logoContainer","Image","require","image","header","onPress","navigate","textHeader","ListHeaderComponent","keyExtractor","toString","renderItem","onEndReached","handleLoadMore","onEndReachedThreshold","inputContainer","placeholder","value","onChangeText","sendButton","create","flex","backgroundColor","marginTop","listContent","flexGrow","justifyContent","margin","fontSize","fontWeight","color","flexDirection","padding","borderTopWidth","borderTopColor","alignItems","alignSelf","marginVertical","marginBottom","textAlign","marginHorizontal","borderRadius","paddingHorizontal","paddingVertical","marginRight","maxWidth","marginLeft","bottom","button"],"sources":["/home/luigi/Área de Trabalho/glpi-app-react/src/pages/Components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, StyleSheet, Pressable, View, TextInput, FlatList, Dimensions } from \"react-native\";\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport RenderHtml from 'react-native-render-html';\nimport servers from \"./servers\";\n\nconst Chat = () => {\n    const navigation = useNavigation();\n    const [chatData, setChatData] = useState([]);\n    const [chatMessageData, setMessageData] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n    const [headerText, setHeaderText] = useState(\"Chat\");\n    const [chatVisible, setChatVisible] = useState(true);\n    const [textServices, setTextServicesRoutes] = useState(\"\");\n    const [page, setPage] = useState(1);\n    const [loading, setLoading] = useState(false);\n\n    const fetchServerUrl = async () => {\n        const url = await servers();\n        console.log(\"Server URL:\", url);\n        return url;\n    };\n\n    const fetchId = async () => await AsyncStorage.getItem('selectedTicketId');\n    \n    const fetchToken = async () => {\n        const storedSessionToken = await AsyncStorage.getItem('sessionToken');\n        const [, tokenPart] = storedSessionToken.replace(/[{}]/g, '').split(':');\n        return JSON.parse(tokenPart);\n    };\n\n    const fetchServiceOption = async () => {\n        try {\n            const routes = await AsyncStorage.getItem('option');\n            return routes ? JSON.parse(routes) : null;\n        } catch (error) {\n            console.error('Erro ao recuperar a opção:', error);\n            return null;\n        }\n    };\n\n    const fetchChatData = async () => {\n        try {\n            const storedId = await fetchId();\n            const tokenObject = await fetchToken();\n            const routes = await fetchServiceOption();\n            const url = await fetchServerUrl();\n\n            const res = await fetch(`${url}/${routes}/${storedId}`, {\n                method: \"GET\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                },\n            });\n\n            if (res.ok) {\n                const data = await res.json();\n                return [data];\n            } else {\n                console.error(\"Erro em acessar a API 1\");\n                return [];\n            }\n        } catch (error) {\n            console.error(\"Erro em carregar a API:\", error);\n            return [];\n        }\n    };\n\n    const fetchMessages = async (page = 1) => {\n        try {\n            const storedId = await fetchId();\n            const tokenObject = await fetchToken();\n            const routes = await fetchServiceOption();\n            const url = await fetchServerUrl();\n\n            const res = await fetch(`${url}/${routes}/${storedId}/ITILFollowup/`, {\n                method: \"GET\",\n                headers: {\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                },\n            });\n\n            if (res.ok) {\n                return await res.json();\n            } else {\n                console.error(\"Erro em acessar a API 2\");\n                return [];\n            }\n        } catch (error) {\n            console.error(\"Erro em carregar a API:\", error);\n            return [];\n        }\n    };\n\n    const loadMessages = async (page) => {\n        if (loading) return;\n        setLoading(true);\n\n        try {\n            const data = await fetchMessages(page);\n            setMessageData(prevData => (page === 1 ? data : [...prevData, ...data]));\n        } catch (error) {\n            console.error(\"Erro ao carregar mensagens:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const sendMessage = async () => {\n        try {\n            if (!newMessage.trim()) {\n                console.error(\"Mensagem está vazia\");\n                return;\n            }\n\n            const storedId = await fetchId();\n            const tokenObject = await fetchToken();\n            const routes = await fetchServiceOption();\n            const url = await fetchServerUrl();\n\n            const response = await fetch(`${url}/ITILFollowup/`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'App-Token': 'D8lhQKHjvcfLNrqluCoeZXFvZptmDDAGhWl17V2R',\n                    'Session-Token': tokenObject,\n                },\n                body: JSON.stringify({\n                    input: {\n                        itemtype: routes,\n                        items_id: storedId,\n                        users_id: 9,\n                        content: newMessage,\n                    },\n                }),\n            });\n\n            if (response.ok) {\n                console.log(\"Mensagem enviada com sucesso\");\n                setNewMessage(\"\");\n                setPage(1);\n                loadMessages(1);\n            } else {\n                const errorData = await response.json();\n                console.error(\"Erro ao enviar a mensagem:\", errorData);\n            }\n        } catch (error) {\n            console.error(\"Erro ao enviar a mensagem:\", error);\n        }\n    };\n\n    const renderChatHeader = () => {\n        if (chatData.length > 0) {\n            const item = chatData[0];\n            return (\n                <View delay={400} animation={\"fadeInUp\"} style={styles.chatItem}>\n                    <Text style={styles.headerTextChat}>Chat com {item.name}</Text>\n                    <Text>({item.id}) - {item.name}</Text>\n                    <Text>{item.content}</Text>\n                    <Text>{item.contact}</Text>\n                    <Text>{item.serial}</Text>\n                    <Text>{item.otherserial}</Text>\n                </View>\n            );\n        }\n        return null;\n    };\n\n    const renderMessageItem = ({ item }) => {\n        const isSentByCurrentUser = item.users_id === 9;\n\n        return (\n            <View\n                delay={400}\n                animation={\"fadeInUp\"}\n                style={[styles.chatbox, isSentByCurrentUser ? styles.sentMessage : styles.receivedMessage]}>\n                <RenderHtml contentWidth={Dimensions.get('window').width - 40} source={{ html: item.content }} />\n            </View>\n        );\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const data = await fetchChatData();\n            setChatData(data);\n        };\n\n        const fetchHeaderText = async () => {\n            const routes = await fetchServiceOption();\n            const text = routes === 'Ticket' ? 'Tickets' : routes === 'Computer' ? 'Computadores' : routes === 'Printer' ? 'Impressoras' : 'erro';\n            setHeaderText(text);\n            setTextServicesRoutes(text);\n        };\n\n        fetchData();\n        fetchHeaderText();\n        loadMessages(page);\n    }, [page]);\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.logoContainer}>\n                <Animatable.Image\n                    animation={\"flipInY\"}\n                    source={require('../assets/logo.png')}\n                    style={styles.image}\n                />\n            </View>\n            <View delay={400} animation={\"fadeInUp\"} style={styles.header}>\n                <Pressable onPress={() => navigation.navigate('Serviços')}>\n                    <Text style={styles.textHeader}>Serviços</Text>\n                </Pressable>\n                <Text style={styles.textHeader}> / </Text>\n                <Text style={styles.textHeader}>{textServices}</Text>\n            </View>\n            <FlatList\n                ListHeaderComponent={renderChatHeader}\n                data={chatMessageData}\n                keyExtractor={(item) => item.id.toString()}\n                renderItem={renderMessageItem}\n                onEndReached={handleLoadMore}\n                onEndReachedThreshold={0.1}\n            />\n            <View style={styles.inputContainer}>\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Digite sua mensagem...\"\n                    value={newMessage}\n                    onChangeText={setNewMessage}\n                />\n                <Pressable onPress={sendMessage} style={styles.sendButton}>\n                    <Text style={styles.text}>Enviar</Text>\n                </Pressable>\n            </View>\n        </View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"#fff\",\n        marginTop: 12,\n    },\n    listContent: {\n        flexGrow: 1,\n        justifyContent: 'space-between',\n    },\n    headerText: {\n        margin: '5%',\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textHeader: {\n        color: \"#fff\",\n        fontWeight: 'bold',\n    },\n    inputContainer: {\n        flexDirection: 'row',\n        padding: 10,\n        backgroundColor: '#fff',\n        borderTopWidth: 1,\n        borderTopColor: '#ddd',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    image: {\n        alignSelf: 'center'\n    },\n    header: {\n        marginVertical: 12,\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        backgroundColor: '#498DF3',\n    },\n    headerTextChat: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        textAlign: 'center',\n    },\n    chatItem: {\n        backgroundColor: \"#DBE6FD\",\n        marginHorizontal: 12,\n        borderRadius: 8,\n        paddingHorizontal: 15,\n        paddingVertical: 10,\n        marginBottom: 10, \n    },\n    sentMessage: {\n        fontSize: 14,\n        marginRight: 'auto',\n        backgroundColor: '#ADD8E6',\n        margin: 12,\n        borderRadius: 8,\n        padding: 10,\n        maxWidth: '70%',\n        alignSelf: 'flex-end',\n    },\n    receivedMessage: {\n        fontSize: 14,\n        marginLeft: 'auto',\n        margin: 12,\n        borderRadius: 8,\n        backgroundColor: '#DBE6FD',\n        padding: 10,\n        maxWidth: '70%',\n        alignSelf: 'flex-start',\n    },\n    input: {\n        backgroundColor: \"#DBE6FD\",\n        borderRadius: 8,\n        marginBottom: 10,\n        padding: 10,\n        flex: 1,\n    },\n    sendButton: {\n        backgroundColor: \"#498DF3\",\n        borderRadius: 6,\n        bottom: 4,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        marginLeft: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    text: {\n        color: \"#fff\",\n        fontSize: 16,\n    },\n    button: {\n        backgroundColor: \"#498DF3\",\n        borderRadius: 6,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: '50%'\n    },\n    logoContainer: {\n        alignItems: 'center',\n        marginVertical: 10,\n    },\n});\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}