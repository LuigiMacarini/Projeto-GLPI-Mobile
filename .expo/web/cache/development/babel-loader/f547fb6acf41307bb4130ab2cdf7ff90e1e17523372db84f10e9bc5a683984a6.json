{"ast":null,"code":"var _jsxFileName = \"/home/luigi/\\xC1rea de Trabalho/glpi-app-react/src/pages/Servi\\xE7os/Tickets.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport logo from '../assets/logo.png';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport TicketCrud from \"../Components/addTickets\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTicket = () => {\n  const navigation = useNavigation();\n  const [headerText, setHeaderText] = useState(\"\");\n  const [textServices, setTextServicesRoutes] = useState(\"\");\n  const textHeaderRoutes = async () => {\n    const routes = await autoPages();\n    switch (routes) {\n      case 'Ticket':\n        return 'Tickets';\n      case 'Computer':\n        return 'Ativos -> Computadores';\n      case 'Printer':\n        return 'Ativos -> Impressoras';\n      default:\n        return 'vazio';\n    }\n  };\n  const textServicesRoutes = async () => {\n    const routes = await autoPages();\n    switch (routes) {\n      case 'Ticket':\n        return 'Tickets';\n      case 'Computer':\n        return 'Computadores';\n      case 'Printer':\n        return 'Impressoras';\n      default:\n        return 'erro';\n    }\n  };\n  useEffect(() => {\n    const updateHeaderText = async () => {\n      const text = await textHeaderRoutes();\n      setHeaderText(text);\n    };\n    const updateTextServices = async () => {\n      const textHeader = await textServicesRoutes();\n      setTextServicesRoutes(textHeader);\n    };\n    updateHeaderText();\n    updateTextServices();\n  }, []);\n  const autoPages = async () => {\n    try {\n      const routes = await AsyncStorage.getItem('option');\n      if (routes !== null) {\n        return JSON.parse(routes);\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error('Erro em pegar a pagina:', error);\n      return null;\n    }\n  };\n  autoPages().then(routes => {}).catch(error => {\n    console.error('Erro:', error);\n  });\n  return _jsxDEV(View, {\n    children: [_jsxDEV(Animatable.View, {\n      style: estilos.container,\n      children: _jsxDEV(Animatable.Image, {\n        animation: \"flipInY\",\n        source: logo,\n        style: estilos.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), _jsxDEV(Animatable.View, {\n      delay: 400,\n      animation: \"fadeInUp\",\n      style: estilos.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        onPress: () => navigation.navigate('Serviços'),\n        children: _jsxDEV(Text, {\n          style: estilos.textHeader,\n          children: \"Servi\\xE7os\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: estilos.textHeader,\n        children: \" /\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: estilos.textHeader,\n        children: textServices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), _jsxDEV(Animatable.View, {\n      delay: 400,\n      animation: \"fadeInUp\",\n      style: estilos.container,\n      children: [_jsxDEV(Text, {\n        style: estilos.headerText,\n        children: headerText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), _jsxDEV(TicketCrud, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), _jsxDEV(TouchableOpacity, {\n        onPress: () => navigation.navigate('Serviços'),\n        style: estilos.button,\n        children: _jsxDEV(Text, {\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\nconst estilos = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\"\n  },\n  image: {\n    margin: 8,\n    alignSelf: 'center'\n  },\n  textHeader: {\n    color: \"#fff\"\n  },\n  header: {\n    backgroundColor: \"#498DF3\",\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  },\n  headerText: {\n    margin: '5%',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  text: {\n    alignSelf: \"center\",\n    fontSize: 20\n  },\n  button: {\n    backgroundColor: \"#498DF3\",\n    borderRadius: 6,\n    width: \"35%\",\n    height: \"5%\",\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowColor: \"#000\",\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n    elevation: 4,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    margin: 16,\n    bottom: 16\n  }\n});\nexport default AddTicket;","map":{"version":3,"names":["React","useState","useEffect","Text","StyleSheet","TouchableOpacity","ScrollView","View","logo","Animatable","useNavigation","TicketCrud","AsyncStorage","jsxDEV","_jsxDEV","AddTicket","navigation","headerText","setHeaderText","textServices","setTextServicesRoutes","textHeaderRoutes","routes","autoPages","textServicesRoutes","updateHeaderText","text","updateTextServices","textHeader","getItem","JSON","parse","error","console","then","catch","children","style","estilos","container","Image","animation","source","image","fileName","_jsxFileName","lineNumber","columnNumber","delay","header","onPress","navigate","button","create","backgroundColor","margin","alignSelf","color","flexDirection","justifyContent","fontSize","fontWeight","borderRadius","width","height","alignItems","shadowColor","shadowOpacity","shadowRadius","elevation","shadowOffset","bottom"],"sources":["/home/luigi/Área de Trabalho/glpi-app-react/src/pages/Serviços/Tickets.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, StyleSheet, TouchableOpacity, ScrollView, View } from \"react-native\";\nimport logo from '../assets/logo.png';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport TicketCrud from \"../Components/addTickets\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst AddTicket = () => {\n    const navigation = useNavigation();\n    const [headerText, setHeaderText] = useState(\"\");\n    const [textServices, setTextServicesRoutes] = useState(\"\");\n\n\n    const textHeaderRoutes = async () => {\n        const routes = await autoPages();\n        switch (routes) {\n            case 'Ticket': return 'Tickets';\n            case 'Computer': return 'Ativos -> Computadores';\n            case 'Printer': return 'Ativos -> Impressoras';\n            default: return 'vazio';\n        }\n    };\n    const textServicesRoutes = async () => {\n        const routes = await autoPages();\n        switch (routes) {\n            case 'Ticket': return 'Tickets';\n            case 'Computer': return 'Computadores';\n            case 'Printer': return 'Impressoras';\n            default: return 'erro';\n        }\n      };\n    \n    useEffect(() => {\n        const updateHeaderText = async () => {\n            const text = await textHeaderRoutes();\n            setHeaderText(text);\n        };\n        const updateTextServices = async()=>{\n            const textHeader = await textServicesRoutes();\n            setTextServicesRoutes(textHeader);\n        }\n        updateHeaderText();\n        updateTextServices();\n    }, []);\n\n    const autoPages = async () => {\n        try {\n            const routes = await AsyncStorage.getItem('option');\n            if (routes !== null) {\n                return JSON.parse(routes);\n            } else {\n                return null;\n            }\n            \n        } catch (error) {\n            console.error('Erro em pegar a pagina:', error);\n            return null;\n        }\n    }\n    autoPages().then(routes => {\n    }).catch(error => {\n      console.error('Erro:', error);\n    });\n\n    return (\n        \n        <View>\n            <Animatable.View style={estilos.container}>\n                <Animatable.Image\n                    animation={\"flipInY\"}\n                    source={logo} style={estilos.image} />\n            </Animatable.View>\n\n            <Animatable.View delay={400} animation={\"fadeInUp\"} style={estilos.header}>\n                <TouchableOpacity\n                onPress={()=> navigation.navigate('Serviços')}>\n        \n                <Text style={estilos.textHeader}>Serviços</Text>\n                </TouchableOpacity>\n                <Text style={estilos.textHeader}> /</Text>\n                <Text style={estilos.textHeader}>{textServices}</Text>\n            </Animatable.View>\n\n            <Animatable.View delay={400} animation={\"fadeInUp\"} style={estilos.container} >\n                <Text style={estilos.headerText}>{headerText}</Text>\n               \n                <TicketCrud></TicketCrud>\n              \n                <TouchableOpacity\n                    onPress={() => navigation.navigate('Serviços')}\n                    style={estilos.button}><Text>Voltar</Text>\n                </TouchableOpacity>\n            </Animatable.View>\n            \n            </View>\n    );\n};\n\nconst estilos = StyleSheet.create({\n    container: {\n        backgroundColor: \"#fff\",\n    },\n    image: {\n        margin: 8,\n        alignSelf: 'center'\n    },\n    textHeader: {\n        color: \"#fff\"\n    },\n    header: {\n        backgroundColor: \"#498DF3\",\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n    },\n    headerText: {\n        margin: '5%',\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    text: {\n        alignSelf: \"center\",\n        fontSize: 20,\n    },\n    button: {\n        backgroundColor: \"#498DF3\",\n        borderRadius: 6,\n        width: \"35%\",\n        height: \"5%\",\n        alignSelf: \"center\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        shadowColor: \"#000\",\n        shadowOpacity: 0.23,\n        shadowRadius: 2.62,\n        elevation: 4,\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        margin: 16,\n        bottom: 16\n\n    },\n});\n\nexport default AddTicket;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}